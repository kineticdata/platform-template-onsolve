<tree schema_version="1.0">
    <sourceName>-</sourceName>
    <sourceGroup>-</sourceGroup>
    <definitionId>routine_onsolve_mir3_stop_notification_v1</definitionId>
    <type>Global Routine</type>
    <status>Active</status>
    <taskTree builder_version="" schema_version="1.0" version="">
        <name>OnSolve MIR3 Stop Notification</name>
        <author></author>
        <notes></notes>
        <lastID>16</lastID>
        <taskDefinition id="routine_onsolve_mir3_stop_notification_v1" name="OnSolve MIR3 Stop Notification" schema_version="1.0" version="1">
            <visible>false</visible>
            <deferrable>true</deferrable>
            <parameters>
                <parameter id="UUIDs JSON" label="UUIDs JSON" required="true" tooltip="A JSON object of open MIR3 Notification UUIDs"></parameter>
            </parameters>
            <handler name="system_tree_call" version="1"></handler>
            <results format="xml">
                <result name="Success" tooltip="'true' or 'false'"></result>
                <result name="Output" tooltip="The output from the call - either the XML/JSON block, or the error message"></result>
                <result name="Terminated Notifications" tooltip="JSON object of terminated UUIDs"></result>
            </results>
        </taskDefinition>
        <request>
            <task definition_id="system_start_v1" id="start" name="Start" x="10" y="10">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters></parameters>
                <messages></messages>
                <dependents>
                    <task label="" type="Complete" value="">utilities_echo_v1_2</task>
                </dependents>
            </task>
            <task definition_id="utilities_echo_v1" id="utilities_echo_v1_2" name="Generate XML Body" x="16" y="120">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>true</visible>
                <parameters>
                    <parameter id="input" label="Input" menu="" required="true" tooltip="">&lt;%=
require 'rexml/document'

str_xml = "&lt;terminateNotifications&gt;&lt;apiVersion&gt;4.14&lt;/apiVersion&gt;&lt;/terminateNotifications&gt;"

doc = REXML::Document.new(str_xml)

## add notificationReportUUID
wrapper = doc.elements['//terminateNotifications']
uuids = JSON.parse(@inputs['UUIDs JSON'])
uuids.each{|uuid|
    nruuid = wrapper.add_element 'notificationReportUUID'
    nruuid.text = uuid
}


output = "" 
doc.write(output)
#To pretty print, do this:
#doc.write(output, 2)

output
%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">mir3_generic_call_v1_9</task>
                </dependents>
            </task>
            <task definition_id="utilities_echo_v1" id="utilities_echo_v1_4" name="Parse or handle output" x="342" y="110">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>true</visible>
                <parameters>
                    <parameter id="input" label="Input" menu="" required="true" tooltip="">&lt;%=
response = JSON.parse(@results['MIR3 Call: Terminate Notification']['output'])

successful = response['success']

output = {
  "Success" =&gt; successful.to_s,
  "Full Output JSON" =&gt; response
}

terminated_notifications=[]

if successful
  reports = response['terminate_notifications_response']['notification_report']

  if reports.is_a? (Hash)
    if reports['status'] == "COMPLETED"
      terminated_notifications.push( reports['notification_report_uuid'] )
    end 
  elsif reports.is_a? (Array)
    reports.each{| report |
      if report['status'] == "COMPLETED"
        terminated_notifications.push( report['notification_report_uuid'] )
      end
    }
  end
end

output['Terminated Notifications'] = terminated_notifications

output.to_json
%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">system_tree_return_v1_16</task>
                </dependents>
            </task>
            <task definition_id="mir3_generic_call_v1" id="mir3_generic_call_v1_9" name="MIR3 Call: Terminate Notification" x="177" y="111">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>true</visible>
                <parameters>
                    <parameter id="error_handling" label="Error Handling" menu="Error Message,Raise Error" required="true" tooltip="Determine what to return if an error is encountered.">Raise Error</parameter>
                    <parameter id="output_type" label="Output Type" menu="JSON,XML" required="false" tooltip="The output type to return from a successful call.">JSON</parameter>
                    <parameter id="xml" label="XML structure" menu="" required="true" tooltip="XML body to make the request.  Must be wrapped in a root element.">&lt;%=@results['Generate XML Body']['output']%&gt;</parameter>
                    <parameter id="action" label="Action" menu="" required="true" tooltip="The action to call in snake case. ex: get_notification_reports_op - Check wsdl for options.">terminate_notifications_op</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">utilities_echo_v1_4</task>
                </dependents>
            </task>
            <task definition_id="system_tree_return_v1" id="system_tree_return_v1_16" name="Return" x="506" y="130">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Success" label="Success" menu="" required="false" tooltip="'true' or 'false'">&lt;%=JSON.parse(@results['Parse or handle output']['output'])['Success']%&gt;</parameter>
                    <parameter id="Output" label="Output" menu="" required="false" tooltip="The output from the call - either the XML/JSON block, or the error message">&lt;%=JSON.parse(@results['Parse or handle output']['output'])['Full Output JSON'].to_json%&gt;</parameter>
                    <parameter id="Terminated Notifications" label="Terminated Notifications" menu="" required="false" tooltip="JSON object of terminated UUIDs">&lt;%=JSON.parse(@results['Parse or handle output']['output'])['Terminated Notifications'].to_json%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents></dependents>
            </task>
        </request>
    </taskTree>
</tree>