<tree schema_version="1.0">
    <sourceName>-</sourceName>
    <sourceGroup>-</sourceGroup>
    <definitionId>routine_kinetic_robot_execution_v2</definitionId>
    <type>Global Routine</type>
    <status>Active</status>
    <taskTree builder_version="" schema_version="1.0" version="">
        <name>Robot Execution Routine V2</name>
        <author></author>
        <notes></notes>
        <lastID>114</lastID>
        <taskDefinition id="routine_kinetic_robot_execution_v2" name="Robot Execution Routine V2" schema_version="1.0" version="1">
            <visible>false</visible>
            <deferrable>true</deferrable>
            <parameters>
                <parameter id="space slug" label="space slug" required="true" tooltip="Space slug of the submission"></parameter>
                <parameter id="submission id" label="submission id" required="true" tooltip="Submission Id of the robot schedule record"></parameter>
                <parameter id="start time" label="start time" required="true" tooltip="The time from which the next schedule should be determined.  Usually the current time, unless this is for a new schedule."></parameter>
                <parameter id="schedule update time" label="schedule update time" required="true" tooltip="Schedule update time (for the initial routine call), or current time (for subsequent calls)."></parameter>
                <parameter id="Initial Run" label="Initial Run" required="true" tooltip="Set to false when this routine calls itself; any other value when called the first time (when a submission is submitted or modified)">False</parameter>
            </parameters>
            <handler name="system_tree_call" version="1"></handler>
            <results format="xml"></results>
        </taskDefinition>
        <request>
            <task definition_id="system_start_v1" id="start" name="Start" x="10" y="10">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters></parameters>
                <messages></messages>
                <dependents>
                    <task label="" type="Complete" value="">routine_kinetic_space_retrieve_v1_88</task>
                </dependents>
            </task>
            <task definition_id="utilities_echo_v1" id="utilities_echo_v1_8" name="Determine wait period" x="501" y="197">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>true</visible>
                <parameters>
                    <parameter id="input" label="Input" menu="" required="true" tooltip="">&lt;%= ((Time.parse(@results['Determine next execution']['next_occurrence']) - Time.now()).to_i) %&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">system_wait_v1_9</task>
                    <task label="" type="Complete" value="">routine_kinetic_datastore_submissions_retrieve_list_v1_97</task>
                </dependents>
            </task>
            <task definition_id="system_wait_v1" id="system_wait_v1_9" name="Wait" x="671" y="209">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>true</visible>
                <parameters>
                    <parameter id="Time to wait" label="Wait time:" menu="" required="true" tooltip="Time you want to wait for deferred task">&lt;%=@results['Determine wait period']['output']%&gt;</parameter>
                    <parameter id="Time unit" label="Time unit:" menu="Second,Minute,Hour,Day,Week" required="true" tooltip="Unit of measurement for time (Seconds, Minutes, Hours, Days, Weeks)">Second</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">routine_kinetic_datastore_submission_retrieve_v1_114</task>
                </dependents>
            </task>
            <task definition_id="utilities_defer_v1" id="utilities_defer_v1_18" name="Defer routine execution" x="671" y="650">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>true</visible>
                <parameters>
                    <parameter id="deferral_value" label="Initial Deferral Value" menu="" required="false" tooltip=""></parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Create" value="">utilities_echo_v1_53</task>
                    <task label="" type="Complete" value="">routine_kinetic_datastore_submission_update_v1_110</task>
                </dependents>
            </task>
            <task definition_id="utilities_echo_v1" id="utilities_echo_v1_21" name="Update runtime inputs" x="1155" y="648">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>true</visible>
                <parameters>
                    <parameter id="input" label="Input" menu="" required="true" tooltip="">&lt;%= inputs = {}
inputs["Kinetic Robot Execution Record Id"]=@results['Create execution record']['Id']
inputs["Kinetic Robot Deferral Token"]=@results['Defer routine execution']['deferral_token']

prev_execution = JSON.parse( @results['Retrieve previous execution']['Submissions List JSON'] )
if prev_execution.empty?
  inputs["Kinetic Robot Previous Execution Output"] = {}
else
  inputs["Kinetic Robot Previous Execution Output"] = JSON.parse( prev_execution[0]['values']['Output'] )
end

inputs["Runtime Inputs"]=JSON.parse( JSON.parse( @results['Recheck submission']['Values JSON'] )['Runtime Inputs'] || "{}" )

inputs.to_json%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">routine_kinetic_workflow_run_create_v1_106</task>
                </dependents>
            </task>
            <task definition_id="system_noop_v1" id="system_noop_v1_27" name="No further schedules" x="316" y="308">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters></parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">routine_kinetic_datastore_submissions_retrieve_list_v1_93</task>
                </dependents>
            </task>
            <task definition_id="system_noop_v1" id="system_noop_v1_35" name="Schedule inactive" x="7" y="311">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters></parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents></dependents>
            </task>
            <task definition_id="utilities_echo_v1" id="utilities_echo_v1_39" name="Schedule change" x="506" y="305">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>true</visible>
                <parameters>
                    <parameter id="input" label="Input" menu="" required="true" tooltip="">The schedule changed since this execution initiated, which stopes processing on this thread. A separate thread will processing the updated schedule.</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents></dependents>
            </task>
            <task definition_id="system_noop_v1" id="system_noop_v1_41" name="Schedule inactive - recheck" x="506" y="394">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters></parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents></dependents>
            </task>
            <task definition_id="utilities_echo_v1" id="utilities_echo_v1_43" name="Notes on if routine cannot be executed" x="1288" y="558">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>true</visible>
                <parameters>
                    <parameter id="input" label="Input" menu="" required="true" tooltip="">Do we error, or ???</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents></dependents>
            </task>
            <task definition_id="system_noop_v1" id="system_noop_v1_47" name="Schedule changed; new run has been initiated" x="139" y="304">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters></parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents></dependents>
            </task>
            <task definition_id="utilities_echo_v1" id="utilities_echo_v1_48" name="Schedule changed" x="147" y="199">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>true</visible>
                <parameters>
                    <parameter id="input" label="Input" menu="" required="true" tooltip="">&lt;%=@inputs['schedule update time'] != @results['Get submission']['Updated At']%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="Changed" type="Complete" value="@results['Schedule changed']['output'] == &quot;true&quot;">system_noop_v1_47</task>
                    <task label="No changes" type="Complete" value="@results['Schedule changed']['output'] == &quot;false&quot;">kinetic_determine_next_occurrence_v2_52</task>
                </dependents>
            </task>
            <task definition_id="utilities_echo_v1" id="utilities_echo_v1_49" name="Notes on if Schedule changed" x="143" y="87">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>true</visible>
                <parameters>
                    <parameter id="input" label="Input" menu="" required="true" tooltip="">This ensures that if the task engine was stopped while multiple changes were happening, it validates against the submission details and not the retrieved values.</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents></dependents>
            </task>
            <task definition_id="kinetic_determine_next_occurrence_v2" id="kinetic_determine_next_occurrence_v2_52" name="Determine next execution" x="316" y="187">
                <version>2</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="start" label="Start (UTC)" menu="" required="true" tooltip="The time when the schedule should begin looking for the next occurrence. Enter in a parsable Ruby time (standard Request CE Datetime field works; ex format YYYY-MM-DDTHH:MM:SS+00:00).">&lt;%=
schedule = JSON.parse(@results['Get submission']['Values JSON'])

if schedule['Recurrence'] == "minutely"
  @inputs['start time']
elsif schedule['Recurrence'] == "hourly"
  execution_hour = Time.parse( @inputs['start time'] ).hour
  execution_minute = schedule['Execution Minute']
  Time.parse( "#{execution_hour}:#{execution_minute}", Time.parse( @inputs['start time'] ) )
else
  execution_hour = schedule['Execution Hour']
  execution_minute = schedule['Execution Minute']
  Time.parse( "#{execution_hour}:#{execution_minute}", Time.parse( @inputs['start time'] ) )
end
%&gt;</parameter>
                    <parameter id="recurrence_type" label="Recurrence Type" menu="" required="true" tooltip="Valid options are 'minutely' [requires interval],'hourly' [requires interval],'daily' [requires interval],'weekly' [requires interval],'monthly' [requires timing, interval and either weekdays or days of month],'yearly' [requires timing, interval, months, and either weekdays or days of month]">&lt;%=JSON.parse(@results['Get submission']['Values JSON'])['Recurrence']%&gt;</parameter>
                    <parameter id="timing" label="Timing" menu="" required="false" tooltip="Requires for monthly and yearly Recurrence Types.  Valid options are 'Relative' or 'Absolute'. Relative refers to relatives dates (ex: First Monday in May and June) and Absolute refers to specific dates (ex: 7th and 10th of June)">&lt;%=JSON.parse(@results['Get submission']['Values JSON'])['Timing']%&gt;</parameter>
                    <parameter id="interval" label="Interval" menu="" required="true" tooltip="The interval between the recurrence_type values.">&lt;%=JSON.parse(@results['Get submission']['Values JSON'])['Interval']%&gt;</parameter>
                    <parameter id="months" label="Months" menu="" required="false" tooltip="The months in which this schedule should execute. Possible vales are entered in array format, with the values of 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'.  Any combination of values is fine. Example: ['January', 'April', 'July', 'October']">&lt;%=
#Input needs to be a comma separated list
JSON.parse(@results['Get submission']['Values JSON'])['Months'].join(",")%&gt;</parameter>
                    <parameter id="days_of_month" label="Days of Month" menu="" required="false" tooltip="The dates on which this schedule should execute. Possible vales are entered in array format, with the values of 1 through 31, and 'last'.  Any combination of values is fine. Example: ['1', '15', 'Last']">&lt;%=
#Input needs to be a comma separated list
JSON.parse( @results['Get submission']['Values JSON'] )['Days'].join(",")%&gt;</parameter>
                    <parameter id="weekdays" label="Weekdays" menu="" required="false" tooltip="The weekdays in which this schedule should execute. Possible vales are entered in array format, with the values of 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'.  Any combination of values is fine. Example: ['Monday', 'Thursday', 'Saturday']">&lt;%=
##Input needs to be a comma separated list
JSON.parse( @results['Get submission']['Values JSON'] )['Weekdays'].join(",")%&gt;</parameter>
                    <parameter id="sunday_index" label="Sunday Index" menu="" required="false" tooltip="Required when Sunday field is populated AND recurrence type is NOT weekly. Possible values are entered in array format, with the values of 'All', 'First, 'Second', 'Third', 'Fourth', 'Last'.  'All' is exclusive to other values.  If not using 'All', any combination of other values is fine.  Example 1: ['All'], Example 2: ['First','Second','Last']">&lt;%=
#Input needs to be a comma separated list
JSON.parse( @results['Get submission']['Values JSON'] )['Sunday Index'].join(",")%&gt;</parameter>
                    <parameter id="monday_index" label="Monday Index" menu="" required="false" tooltip="Required when Monday field is populated AND recurrence type is NOT weekly. Possible values are entered in array format, with the values of 'All', 'First, 'Second', 'Third', 'Fourth', 'Last'.  'All' is exclusive to other values.  If not using 'All', any combination of other values is fine.  Example 1: ['All'], Example 2: ['First','Second','Last']">&lt;%=
##Input needs to be a comma separated list
JSON.parse( @results['Get submission']['Values JSON'] )['Monday Index'].join(",")%&gt;</parameter>
                    <parameter id="tuesday_index" label="Tuesday Index" menu="" required="false" tooltip="Required when Tuesday field is populated AND recurrence type is NOT weekly. Possible values are entered in array format, with the values of 'All', 'First, 'Second', 'Third', 'Fourth', 'Last'.  'All' is exclusive to other values.  If not using 'All', any combination of other values is fine.  Example 1: ['All'], Example 2: ['First','Second','Last']">&lt;%=
#Input needs to be a comma separated list
JSON.parse( @results['Get submission']['Values JSON'] )['Tuesday Index'].join(",")%&gt;</parameter>
                    <parameter id="wednesday_index" label="Wednesday Index" menu="" required="false" tooltip="Required when Wednesday field is populated AND recurrence type is NOT weekly. Possible values are entered in array format, with the values of 'All', 'First, 'Second', 'Third', 'Fourth', 'Last'.  'All' is exclusive to other values.  If not using 'All', any combination of other values is fine.  Example 1: ['All'], Example 2: ['First','Second','Last']">&lt;%=
##Input needs to be a comma separated list
JSON.parse( @results['Get submission']['Values JSON'] )['Wednesday Index'].join(",")%&gt;</parameter>
                    <parameter id="thursday_index" label="Thursday Index" menu="" required="false" tooltip="Required when Thursday field is populated AND recurrence type is NOT weekly. Possible values are entered in array format, with the values of 'All', 'First, 'Second', 'Third', 'Fourth', 'Last'.  'All' is exclusive to other values.  If not using 'All', any combination of other values is fine.  Example 1: ['All'], Example 2: ['First','Second','Last']">&lt;%=
#Input needs to be a comma separated list
JSON.parse( @results['Get submission']['Values JSON'] )['Thursday Index'].join(",")%&gt;</parameter>
                    <parameter id="friday_index" label="Friday Index" menu="" required="false" tooltip="Required when Friday field is populated AND recurrence type is NOT weekly. Possible values are entered in array format, with the values of 'All', 'First, 'Second', 'Third', 'Fourth', 'Last'.  'All' is exclusive to other values.  If not using 'All', any combination of other values is fine.  Example 1: ['All'], Example 2: ['First','Second','Last']">&lt;%=
#Input needs to be a comma separated list
JSON.parse( @results['Get submission']['Values JSON'] )['Friday Index'].join(",")%&gt;</parameter>
                    <parameter id="saturday_index" label="Saturday Index" menu="" required="false" tooltip="Required when Saturday field is populated AND recurrence type is NOT weekly. Possible values are entered in array format, with the values of 'All', 'First, 'Second', 'Third', 'Fourth', 'Last'.  'All' is exclusive to other values.  If not using 'All', any combination of other values is fine.  Example 1: ['All'], Example 2: ['First','Second','Last']">&lt;%=
#Input needs to be a comma separated list
JSON.parse( @results['Get submission']['Values JSON'] )['Saturday Index'].join(",")%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="Future Time" type="Complete" value="JSON.parse( @results['Get submission']['Values JSON'] )['End Date'].nil? || JSON.parse( @results['Get submission']['Values JSON'] )['End Date'].empty? || ( !( JSON.parse(@results['Get submission']['Values JSON'])['End Date'].nil? ) &amp;&amp; !( JSON.parse(@results['Get submission']['Values JSON'])['End Date'].empty? ) &amp;&amp; ( ( Time.parse( @results['Determine next execution']['next_occurrence'] ) - Time.parse( JSON.parse(@results['Get submission']['Values JSON'])['End Date'] ) ).to_i  &lt; 0) )">utilities_echo_v1_8</task>
                    <task label="After end date" type="Complete" value="( !( JSON.parse( @results['Get submission']['Values JSON'] )['End Date'].nil? ) &amp;&amp; !( JSON.parse( @results['Get submission']['Values JSON'] )['End Date'].empty? ) &amp;&amp; ( ( Time.parse( @results['Determine next execution']['next_occurrence'] ) - Time.parse( JSON.parse( @results['Get submission']['Values JSON'] )['End Date'] ) ).to_i  &gt;= 0 ) )">system_noop_v1_27</task>
                </dependents>
            </task>
            <task definition_id="utilities_echo_v1" id="utilities_echo_v1_53" name="Capture Execution Start Time" x="836" y="647">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>true</visible>
                <parameters>
                    <parameter id="input" label="Input" menu="" required="true" tooltip="">&lt;%=
require 'time'
Time.now().utc.iso8601
%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">routine_kinetic_datastore_submission_create_v1_103</task>
                </dependents>
            </task>
            <task definition_id="system_noop_v1" id="system_noop_v1_65" name="No updates (no op)" x="671" y="397">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters></parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="Inactive" type="Complete" value="JSON.parse(@results['Recheck submission']['Values JSON'])['Status'].downcase != &quot;active&quot;">system_noop_v1_41</task>
                    <task label="Active" type="Complete" value="JSON.parse(@results['Recheck submission']['Values JSON'])['Status'].downcase == &quot;active&quot;">routine_kinetic_datastore_submissions_retrieve_list_v1_104</task>
                </dependents>
            </task>
            <task definition_id="system_noop_v1" id="system_noop_v1_70" name="Schedule has been deleted" x="825" y="298">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters></parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents></dependents>
            </task>
            <task definition_id="routine_kinetic_robot_execution_v2" id="routine_kinetic_robot_execution_v2_83" name="Call self" x="671" y="912">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="space slug" label="space slug" menu="" required="true" tooltip="Space slug of the submission">&lt;%=@inputs['space slug']%&gt;</parameter>
                    <parameter id="submission id" label="submission id" menu="" required="true" tooltip="Submission Id of the robot schedule record">&lt;%=@inputs['submission id']%&gt;</parameter>
                    <parameter id="start time" label="start time" menu="" required="true" tooltip="The time from which the next schedule should be determined.  Usually the current time, unless this is for a new schedule.">&lt;%=Time.now()%&gt;</parameter>
                    <parameter id="schedule update time" label="schedule update time" menu="" required="true" tooltip="Schedule update time (for the initial routine call), or current time (for subsequent calls).">&lt;%=@inputs['schedule update time']%&gt;</parameter>
                    <parameter id="Initial Run" label="Initial Run" menu="" required="true" tooltip="Set to false when this routine calls itself; any other value when called the first time (when a submission is submitted or modified)">False</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents></dependents>
            </task>
            <task definition_id="routine_kinetic_space_retrieve_v1" id="routine_kinetic_space_retrieve_v1_88" name="Get space details" x="11" y="84">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters></parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">routine_kinetic_datastore_submission_retrieve_v1_113</task>
                </dependents>
            </task>
            <task definition_id="routine_kinetic_datastore_submission_retrieve_v1" id="routine_kinetic_datastore_submission_retrieve_v1_90" name="Get submission-x" x="-100" y="185">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Id" label="Id" menu="" required="true" tooltip="The Id of the submission to retrieve">&lt;%=@inputs['submission id']%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents></dependents>
            </task>
            <task definition_id="routine_kinetic_datastore_submissions_retrieve_list_v1" id="routine_kinetic_datastore_submissions_retrieve_list_v1_93" name="Find next execution record - Clear" x="319" y="398">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Form Slug" label="Form Slug" menu="" required="false" tooltip="The slug of the Form to find submissions in.">robot-next-execution</parameter>
                    <parameter id="Index To Search" label="Index To Search" menu="" required="false" tooltip="The Index definition to search (i.e. values[Name],values[Status])">values[Robot ID]</parameter>
                    <parameter id="Core State" label="Core State" menu="" required="false" tooltip="Searches for submissions that have a core state that matches this parameter. If no value is provided, the results will contain submissions in all core states."></parameter>
                    <parameter id="Limit" label="Limit" menu="" required="false" tooltip="Limit the number of results returned. If not provided, the server will limit the results to 25 submissions. Maximum limit 1000"></parameter>
                    <parameter id="Query" label="Query" menu="" required="false" tooltip="Query to use to fetch submissions. (i.e values[First Name]=&quot;Fred&quot;)">values[Robot ID]="&lt;%=@inputs['submission id']%&gt;"</parameter>
                    <parameter id="Next Page Token" label="Next Page Token" menu="" required="false" tooltip="The value to use as the offset for the page of submissions to return. The submission that matches this value will not be included in the results."></parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">routine_kinetic_datastore_submission_update_v1_112</task>
                </dependents>
            </task>
            <task definition_id="routine_kinetic_email_template_notification_send_v1" id="routine_kinetic_email_template_notification_send_v1_95" name="Notification:  Schedule Completion" x="319" y="648">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Recipient List" label="Recipient List" menu="" required="true" tooltip="Comma separated list of recipients (Usernames, SMTP Addresses, and/or Team Names)">&lt;%=JSON.parse(@results['Get submission']['Values JSON'])['Schedule Completion Recipient']%&gt;</parameter>
                    <parameter id="Notification Template Name" label="Notification Template Name" menu="" required="true" tooltip="Name of the notification template to use when sending this email">&lt;%=JSON.parse(@results['Get submission']['Values JSON'])['Schedule Completion Notification Message Template']%&gt;</parameter>
                    <parameter id="JSON Variables" label="JSON Variables" menu="" required="false" tooltip="JSON input of miscellaneous values.  These values are used to replace placeholder content in notification messages.">&lt;%=
{
  #"Robot Name" =&gt; JSON.parse(@results['Get submission']['Values JSON'])['Schedule Name'],
  #"Robot Id" =&gt; @results['Get submission']['Id']
}.to_json%&gt;</parameter>
                    <parameter id="Kapp Slug Initiating Notification" label="Kapp Slug Initiating Notification" menu="" required="true" tooltip="The slug of the Kapp sending the notification (ex: services, queue, etc.)">&lt;%=#@results['Get submission']['Kapp Slug']
#"Datastore"
"Robot"
%&gt;</parameter>
                    <parameter id="Related Submission Id" label="Related Submission Id" menu="" required="false" tooltip="Id of the submission to get values for, required if using those or attachments in the message">&lt;%=@inputs['submission id']%&gt;</parameter>
                    <parameter id="Form Slug Initiating Notification" label="Form Slug Initiating Notification" menu="" required="false" tooltip="The slug of the Form sending the notification (ex: work-order, cleaning, etc.)"></parameter>
                    <parameter id="Is Datastore" label="Is Datastore" menu="" required="false" tooltip="If the Related Submission Id, or Form Slug is a datastore form.">false</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents></dependents>
            </task>
            <task definition_id="routine_kinetic_datastore_submissions_retrieve_list_v1" id="routine_kinetic_datastore_submissions_retrieve_list_v1_97" name="Find next execution record" x="509" y="79">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Form Slug" label="Form Slug" menu="" required="false" tooltip="The slug of the Form to find submissions in.">robot-next-execution</parameter>
                    <parameter id="Index To Search" label="Index To Search" menu="" required="false" tooltip="The Index definition to search (i.e. values[Name],values[Status])">values[Robot ID]</parameter>
                    <parameter id="Core State" label="Core State" menu="" required="false" tooltip="Searches for submissions that have a core state that matches this parameter. If no value is provided, the results will contain submissions in all core states."></parameter>
                    <parameter id="Limit" label="Limit" menu="" required="false" tooltip="Limit the number of results returned. If not provided, the server will limit the results to 25 submissions. Maximum limit 1000"></parameter>
                    <parameter id="Query" label="Query" menu="" required="false" tooltip="Query to use to fetch submissions. (i.e values[First Name]=&quot;Fred&quot;)">values[Robot ID]="&lt;%=@inputs['submission id']%&gt;"</parameter>
                    <parameter id="Next Page Token" label="Next Page Token" menu="" required="false" tooltip="The value to use as the offset for the page of submissions to return. The submission that matches this value will not be included in the results."></parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="Not found" type="Complete" value="@results['Find next execution record']['Count'].to_i == 0">routine_kinetic_datastore_submission_create_v1_98</task>
                    <task label="Found" type="Complete" value="@results['Find next execution record']['Count'].to_i &gt; 0">routine_kinetic_datastore_submission_update_v1_111</task>
                </dependents>
            </task>
            <task definition_id="routine_kinetic_datastore_submission_create_v1" id="routine_kinetic_datastore_submission_create_v1_98" name="Create next execution record" x="319" y="76">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Form Slug" label="Form Slug" menu="" required="true" tooltip="The slug of the Form to create the submission in">robot-next-execution</parameter>
                    <parameter id="Current Page Name" label="Current Page Name" menu="" required="false" tooltip="The page to set the submission to"></parameter>
                    <parameter id="Current Page Navigation" label="Current Page Navigation" menu="" required="false" tooltip="The direction of the next page (next or previous)"></parameter>
                    <parameter id="Values JSON" label="Values JSON" menu="" required="false" tooltip="A JSON Map of values to set into the submissions fields">&lt;%={
'Robot ID' =&gt; @inputs['submission id'],
'Next Execution' =&gt; Time.parse( @results['Determine next execution']['next_occurrence'] ).utc.iso8601
}.to_json%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents></dependents>
            </task>
            <task definition_id="routine_kinetic_datastore_submission_create_v1" id="routine_kinetic_datastore_submission_create_v1_103" name="Create execution record" x="990" y="650">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Form Slug" label="Form Slug" menu="" required="true" tooltip="The slug of the Form to create the submission in">robot-executions</parameter>
                    <parameter id="Current Page Name" label="Current Page Name" menu="" required="false" tooltip="The page to set the submission to"></parameter>
                    <parameter id="Current Page Navigation" label="Current Page Navigation" menu="" required="false" tooltip="The direction of the next page (next or previous)"></parameter>
                    <parameter id="Values JSON" label="Values JSON" menu="" required="false" tooltip="A JSON Map of values to set into the submissions fields">&lt;%=
runtime_inputs = JSON.parse(@results['Recheck submission']['Values JSON'])['Runtime Inputs'] || "{}"
{
  "Robot ID" =&gt; @inputs['submission id'],
  "Robot Name" =&gt; JSON.parse(@results['Recheck submission']['Values JSON'])['Robot Name'],
  "Start" =&gt; @results['Capture Execution Start Time']['output'],
  "Input" =&gt; (runtime_inputs).gsub(/\\/,'\\\\\\\\').gsub(/"/,'\"'),
  "Status" =&gt; "Queued",
  "Deferral Token" =&gt; @results['Defer routine execution']['deferral_token']
}.to_json%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">utilities_echo_v1_21</task>
                </dependents>
            </task>
            <task definition_id="routine_kinetic_datastore_submissions_retrieve_list_v1" id="routine_kinetic_datastore_submissions_retrieve_list_v1_104" name="Retrieve previous execution" x="673" y="517">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Form Slug" label="Form Slug" menu="" required="false" tooltip="The slug of the Form to find submissions in.">robot-executions</parameter>
                    <parameter id="Index To Search" label="Index To Search" menu="" required="false" tooltip="The Index definition to search (i.e. values[Name],values[Status])">values[Robot ID],values[Status],createdAt</parameter>
                    <parameter id="Core State" label="Core State" menu="" required="false" tooltip="Searches for submissions that have a core state that matches this parameter. If no value is provided, the results will contain submissions in all core states."></parameter>
                    <parameter id="Direction" label="Direction" menu="" required="false" tooltip="Result Set sorting direction. The default value is ascending.">DESC</parameter>
                    <parameter id="Limit" label="Limit" menu="" required="false" tooltip="Limit the number of results returned. If not provided, the server will limit the results to 25 submissions. Maximum limit 1000">1</parameter>
                    <parameter id="Query" label="Query" menu="" required="false" tooltip="Query to use to fetch submissions. (i.e values[First Name]=&quot;Fred&quot;)">values[Robot ID] = "&lt;%=@results['Recheck submission']['Id']%&gt;" AND values[Status] = "Completed"</parameter>
                    <parameter id="Next Page Token" label="Next Page Token" menu="" required="false" tooltip="The value to use as the offset for the page of submissions to return. The submission that matches this value will not be included in the results."></parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">utilities_defer_v1_18</task>
                </dependents>
            </task>
            <task definition_id="routine_kinetic_workflow_run_create_v1" id="routine_kinetic_workflow_run_create_v1_106" name="Execute tree" x="1290" y="655">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Source" label="Source" menu="" required="true" tooltip="Use '-' for a global routine.">Kinetic Robot</parameter>
                    <parameter id="Group" label="Group" menu="" required="true" tooltip="Use '-' for any routine.">Robots</parameter>
                    <parameter id="Name" label="Name" menu="" required="true" tooltip="The workflow (tree/routine) name to run.">&lt;%=JSON.parse(@results['Recheck submission']['Values JSON'])['Task Tree']%&gt;</parameter>
                    <parameter id="Body" label="Body" menu="" required="false" tooltip="A JSON string of name/value pairs that will be passed to the tree as body content.">&lt;%=@results['Update runtime inputs']['output']%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents></dependents>
            </task>
            <task definition_id="routine_kinetic_email_template_notification_send_v1" id="routine_kinetic_email_template_notification_send_v1_109" name="Notification:  Schedule Execution" x="836" y="782">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Recipient List" label="Recipient List" menu="" required="true" tooltip="Comma separated list of recipients (Usernames, SMTP Addresses, and/or Team Names)">&lt;%=JSON.parse(@results['Recheck submission']['Values JSON'])['Run Completion Recipient']%&gt;</parameter>
                    <parameter id="Notification Template Name" label="Notification Template Name" menu="" required="true" tooltip="Name of the notification template to use when sending this email">&lt;%=JSON.parse(@results['Recheck submission']['Values JSON'])['Run Completion Notification Message Template']%&gt;</parameter>
                    <parameter id="JSON Variables" label="JSON Variables" menu="" required="false" tooltip="JSON input of miscellaneous values.  These values are used to replace placeholder content in notification messages.">&lt;%=
{
  #"Schedule Name" =&gt; JSON.parse(@results['Get submission']['Values JSON'])['Schedule Name'],
  #"Schedule Id" =&gt; @results['Get submission']['ID'],
  "Execution Id" =&gt; @results['Create execution record']['Submission ID']
}.to_json%&gt;</parameter>
                    <parameter id="Kapp Slug Initiating Notification" label="Kapp Slug Initiating Notification" menu="" required="true" tooltip="The slug of the Kapp sending the notification (ex: services, queue, etc.)">Robot</parameter>
                    <parameter id="Related Submission Id" label="Related Submission Id" menu="" required="false" tooltip="Id of the submission to get values for, required if using those or attachments in the message">&lt;%=@inputs['submission id']%&gt;</parameter>
                    <parameter id="Form Slug Initiating Notification" label="Form Slug Initiating Notification" menu="" required="false" tooltip="The slug of the Form sending the notification (ex: work-order, cleaning, etc.)"></parameter>
                    <parameter id="Is Datastore" label="Is Datastore" menu="" required="false" tooltip="If the Related Submission Id, or Form Slug is a datastore form.">false</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents></dependents>
            </task>
            <task definition_id="routine_kinetic_datastore_submission_update_v1" id="routine_kinetic_datastore_submission_update_v1_110" name="Update execution record" x="672" y="781">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Id" label="Id" menu="" required="true" tooltip="The id of the submission to update">&lt;%=@results['Create execution record']['Id']%&gt;</parameter>
                    <parameter id="Updated - Core State" label="Updated - Core State" menu="" required="false" tooltip="The submissions core state"></parameter>
                    <parameter id="Updated - Current Page Name" label="Updated - Current Page Name" menu="" required="false" tooltip="The page to set the submission to"></parameter>
                    <parameter id="Updated - Current Page Navigation" label="Updated - Current Page Navigation" menu="" required="false" tooltip="The direction of the next page (next or previous)"></parameter>
                    <parameter id="Updated - Values JSON" label="Updated - Values JSON" menu="" required="false" tooltip="A JSON representation of the submissions values">&lt;%=
require 'time'
now = Time.now()

#output = "No output - possibly manually completed due to error."
output = {}
if @results['Defer routine execution'] &amp;&amp; @results['Defer routine execution'].has_key?('output') &amp;&amp; !@results['Defer routine execution']['output'].nil?
  output = (@results['Defer routine execution']['output']).gsub(/\\/,'\\\\\\\\')
end

#"Output" =&gt; (@results['Defer routine execution']['output']).gsub(/\\/,'\\\\\\\\').gsub(/"/,'\"')
{
  "End" =&gt; now.utc.iso8601,
  "Execution Duration" =&gt; now - Time.parse(@results['Capture Execution Start Time']['output']),
  "Status" =&gt; "Completed", 
  "Output" =&gt; output
}.to_json %&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">routine_kinetic_robot_execution_v2_83</task>
                    <task label="Notify" type="Complete" value="JSON.parse(@results['Recheck submission']['Values JSON'])['Notify Upon Each Run Completion'].downcase == &quot;yes&quot;">routine_kinetic_email_template_notification_send_v1_109</task>
                </dependents>
            </task>
            <task definition_id="routine_kinetic_datastore_submission_update_v1" id="routine_kinetic_datastore_submission_update_v1_111" name="Update next execution record" x="670" y="77">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Id" label="Id" menu="" required="true" tooltip="The id of the submission to update">&lt;%=JSON.parse( @results['Find next execution record']['Submissions List JSON'] )[0]['id']%&gt;</parameter>
                    <parameter id="Updated - Core State" label="Updated - Core State" menu="" required="false" tooltip="The submissions core state"></parameter>
                    <parameter id="Updated - Current Page Name" label="Updated - Current Page Name" menu="" required="false" tooltip="The page to set the submission to"></parameter>
                    <parameter id="Updated - Current Page Navigation" label="Updated - Current Page Navigation" menu="" required="false" tooltip="The direction of the next page (next or previous)"></parameter>
                    <parameter id="Updated - Values JSON" label="Updated - Values JSON" menu="" required="false" tooltip="A JSON representation of the submissions values">&lt;%={
'Next Execution' =&gt; Time.parse( @results['Determine next execution']['next_occurrence'] ).utc.iso8601
}.to_json%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents></dependents>
            </task>
            <task definition_id="routine_kinetic_datastore_submission_update_v1" id="routine_kinetic_datastore_submission_update_v1_112" name="Update next execution record - Clear" x="319" y="517">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Id" label="Id" menu="" required="true" tooltip="The id of the submission to update">&lt;%=JSON.parse( @results['Find next execution record - Clear']['Submissions List JSON'] )[0]['id']%&gt;</parameter>
                    <parameter id="Updated - Core State" label="Updated - Core State" menu="" required="false" tooltip="The submissions core state"></parameter>
                    <parameter id="Updated - Current Page Name" label="Updated - Current Page Name" menu="" required="false" tooltip="The page to set the submission to"></parameter>
                    <parameter id="Updated - Current Page Navigation" label="Updated - Current Page Navigation" menu="" required="false" tooltip="The direction of the next page (next or previous)"></parameter>
                    <parameter id="Updated - Values JSON" label="Updated - Values JSON" menu="" required="false" tooltip="A JSON representation of the submissions values">&lt;%={
'Next Execution' =&gt; nil
}.to_json%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="Notify" type="Complete" value="JSON.parse(@results['Get submission']['Values JSON'])['Notify Upon Schedule Completion'].downcase == &quot;yes&quot; &amp;&amp; !@inputs['Initial Run'].nil? &amp;&amp; @inputs['Initial Run'].downcase == &quot;false&quot;">routine_kinetic_email_template_notification_send_v1_95</task>
                </dependents>
            </task>
            <task definition_id="routine_kinetic_datastore_submission_retrieve_v1" id="routine_kinetic_datastore_submission_retrieve_v1_113" name="Get submission" x="10" y="195">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Id" label="Id" menu="" required="true" tooltip="The Id of the submission to retrieve">&lt;%=@inputs['submission id']%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="Active" type="Complete" value="JSON.parse(@results['Get submission']['Values JSON'])['Status'].downcase == &quot;active&quot;">utilities_echo_v1_48</task>
                    <task label="Inactive" type="Complete" value="JSON.parse(@results['Get submission']['Values JSON'])['Status'].downcase != &quot;active&quot;">system_noop_v1_35</task>
                </dependents>
            </task>
            <task definition_id="routine_kinetic_datastore_submission_retrieve_v1" id="routine_kinetic_datastore_submission_retrieve_v1_114" name="Recheck submission" x="671" y="297">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Id" label="Id" menu="" required="true" tooltip="The Id of the submission to retrieve">&lt;%=@inputs['submission id']%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="Not found" type="Complete" value="@results['Recheck submission']['Exists'] == &quot;false&quot;">system_noop_v1_70</task>
                    <task label="Had updates" type="Complete" value="@results['Recheck submission']['Exists'] == &quot;true&quot; &amp;&amp; @results['Recheck submission']['Updated At'] != @inputs['schedule update time']&#10;">utilities_echo_v1_39</task>
                    <task label="No updates" type="Complete" value="@results['Recheck submission']['Exists'] == &quot;true&quot; &amp;&amp; @results['Recheck submission']['Updated At'] == @inputs['schedule update time']&#10;">system_noop_v1_65</task>
                </dependents>
            </task>
        </request>
    </taskTree>
</tree>