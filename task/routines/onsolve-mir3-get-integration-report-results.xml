<tree schema_version="1.0">
    <sourceName>-</sourceName>
    <sourceGroup>-</sourceGroup>
    <definitionId>routine_onsolve_mir3_get_integration_report_results</definitionId>
    <type>Global Routine</type>
    <status>Active</status>
    <taskTree builder_version="" schema_version="1.0" version="">
        <name>OnSolve MIR3 Get Integration Report Results</name>
        <author></author>
        <notes></notes>
        <lastID>18</lastID>
        <taskDefinition id="routine_onsolve_mir3_get_integration_report_results" name="OnSolve MIR3 Get Integration Report Results" schema_version="1.0" version="1">
            <visible>false</visible>
            <deferrable>true</deferrable>
            <parameters>
                <parameter id="UUID" label="UUID" required="true" tooltip="The UUID for the MIR3 Notification"></parameter>
                <parameter id="Timestamp" label="Timestamp" required="true" tooltip="The point after which to return contact attempts and responses from the report"></parameter>
                <parameter id="Timezone" label="Timezone" required="true" tooltip="Timezone to be used for building display lines that include textual timestamps. Options are CST, EST, PST, UTC, or USER">USER</parameter>
                <parameter id="Responses Used" label="Responses Used" required="true" tooltip="0 = Do not included responses in results, 1 = Include responses">1</parameter>
                <parameter id="Success Responder Type" label="Success Responder Type" required="true" tooltip="0 = Not needed, 1 = First and Last Name, 2 = Employee ID,  3 = User Name, 4 = Primary Key">3</parameter>
                <parameter id="Primary Key Field" label="Primary Key Field" required="false" tooltip="Required only if using Success Responder Type = 4, otherwise not used"></parameter>
                <parameter id="Detail Level" label="Detail Level" required="true" tooltip="1 = Contact attemptes, responses, and counts, 2 = Responses and counts, 3 = Only 'Success' responses and counts, 4 = Counts only">1</parameter>
                <parameter id="Report Name" label="Report Name" required="true" tooltip="">Integration Results</parameter>
            </parameters>
            <handler name="system_tree_call" version="1"></handler>
            <results format="xml">
                <result name="Success" tooltip="'true' or 'false'"></result>
                <result name="Output" tooltip="The output from the call - either the XML/JSON block, or the error message"></result>
            </results>
        </taskDefinition>
        <request>
            <task definition_id="system_start_v1" id="start" name="Start" x="10" y="10">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters></parameters>
                <messages></messages>
                <dependents>
                    <task label="" type="Complete" value="">utilities_echo_v1_15</task>
                </dependents>
            </task>
            <task definition_id="utilities_echo_v1" id="utilities_echo_v1_2" name="Generate XML Body" x="165" y="98">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>true</visible>
                <parameters>
                    <parameter id="input" label="Input" menu="" required="true" tooltip="">&lt;%=
require 'rexml/document'

str_xml = "&lt;executeCustomReport&gt;&lt;apiVersion&gt;4.14&lt;/apiVersion&gt;&lt;/executeCustomReport&gt;"

doc = REXML::Document.new(str_xml)

## add notificationReportUUID
wrapper = doc.elements['//executeCustomReport']
report = wrapper.add_element 'reportName'
report.text = @inputs['Report Name']
uuid_el = wrapper.add_element 'param'
uuid_el_param = uuid_el.add_element 'paramName'
uuid_el_param.text = 'notificationReportUUID'
uuid_el_param_value = uuid_el.add_element 'uuidValue'
uuid_el_param_value.text = @inputs['UUID'].strip

timestamp_el = wrapper.add_element 'param'
timestamp_el_param = timestamp_el.add_element 'paramName'
timestamp_el_param.text = 'timestamp'
timestamp_el_param_value = timestamp_el.add_element 'stringValue'
##timestamp_el_param_value.text = @inputs['Timestamp'].strip
timestamp_el_param_value.text = "2018-12-04 07:05:17"

timezone_el = wrapper.add_element 'param'
timezone_el_param = timezone_el.add_element 'paramName'
timezone_el_param.text = 'timezone'
timezone_el_param_value = timezone_el.add_element 'stringValue'
timezone_el_param_value.text = @inputs['Timezone'].strip.upcase

response_used_el = wrapper.add_element 'param'
response_used_el_param = response_used_el.add_element 'paramName'
response_used_el_param.text = 'responsesUsed'
response_used_el_param_value = response_used_el.add_element 'intValue'
response_used_el_param_value.text = @inputs['Responses Used'].strip

success_responder_type_el = wrapper.add_element 'param'
success_responder_type_el_param = success_responder_type_el.add_element 'paramName'
success_responder_type_el_param.text = 'successResponderType'
success_responder_type_el_param_value = success_responder_type_el.add_element 'intValue'
success_responder_type_el_param_value.text = @inputs['Success Responder Type'].strip

if @inputs['Success Responder Type'] == "4" &amp;&amp; !@inputs['Primary Field Field'].nil? &amp;&amp; !@inputs['Primary Field Field'].empty? &amp;&amp; !@inputs['Primary Field Field'].strip.empty?
  primary_key_el = wrapper.add_element 'param'
  primary_key_el_param = primary_key_el.add_element 'paramName'
  primary_key_el_param.text = 'primaryKey'
  primary_key_el_param_value = primary_key_el.add_element 'stringValue'
  primary_key_el_param_value.text = @inputs['Primary Key'].strip
elsif @inputs['Success Responder Type'] == "4"
  raise "'Primary Key' is required when 'Success Responder Type' is set to 4."
end

detail_level_el = wrapper.add_element 'param'
detail_level_el_param = detail_level_el.add_element 'paramName'
detail_level_el_param.text = 'detailLevel'
detail_level_el_param_value = detail_level_el.add_element 'intValue'
detail_level_el_param_value.text = @inputs['Detail Level'].strip

output = "" 
doc.write(output)
#To pretty print, do this:
#doc.write(output, 2)

output
%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">mir3_generic_call_v1_9</task>
                </dependents>
            </task>
            <task definition_id="utilities_echo_v1" id="utilities_echo_v1_4" name="Parse or handle output" x="506" y="88">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>true</visible>
                <parameters>
                    <parameter id="input" label="Input" menu="" required="true" tooltip="">&lt;%=
response = JSON.parse(@results['MIR3 Call: Get Integration Report Results']['output'])

successful = response['success']

output = {
  "Success" =&gt; successful.to_s,
  "Full Output JSON" =&gt; response
}

output.to_json
%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">system_tree_return_v1_17</task>
                </dependents>
            </task>
            <task definition_id="mir3_generic_call_v1" id="mir3_generic_call_v1_9" name="MIR3 Call: Get Integration Report Results" x="341" y="66">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>true</visible>
                <parameters>
                    <parameter id="error_handling" label="Error Handling" menu="Error Message,Raise Error" required="true" tooltip="Determine what to return if an error is encountered.">Raise Error</parameter>
                    <parameter id="output_type" label="Output Type" menu="JSON,XML" required="false" tooltip="The output type to return from a successful call.">JSON</parameter>
                    <parameter id="xml" label="XML structure" menu="" required="true" tooltip="XML body to make the request.  Must be wrapped in a root element.">&lt;%=@results['Generate XML Body']['output']%&gt;</parameter>
                    <parameter id="action" label="Action" menu="" required="true" tooltip="The action to call in snake case. ex: get_notification_reports_op - Check wsdl for options.">execute_custom_report_op</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">utilities_echo_v1_4</task>
                </dependents>
            </task>
            <task definition_id="utilities_echo_v1" id="utilities_echo_v1_15" name="Validate Some Inputs" x="11" y="87">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>true</visible>
                <parameters>
                    <parameter id="input" label="Input" menu="" required="true" tooltip="">&lt;%=
errors = []

if !['CST', 'EST', 'PST', 'UTC', 'USER'].include? (@inputs['Timezone'].strip.upcase)
  errors.push("Supplied Timezone value '#{@inputs['Timezone'].strip.upcase}' must be one of these: CST, EST, PST, UTC, USER")
end

if !['0', '1'].include? (@inputs['Responses Used'].strip.upcase)
  errors.push("Supplied Responses Used value '#{@inputs['Responses Used'].strip.upcase}' must be either 1 or 2")
end

if !['0', '1', '2', '3', '4'].include? (@inputs['Success Responder Type'].strip.upcase)
  errors.push("Supplied Success Responder Type value '#{@inputs['Success Responder Type'].strip.upcase}' must be either 0, 1, 2, 3, or 4")
end

if !['1', '2', '3', '4'].include? (@inputs['Detail Level'].strip.upcase)
  errors.push("Supplied Detail Level value '#{@inputs['Detail Level'].strip.upcase}' must be either 1, 2, 3, or 4")
end

if @inputs['Report Name'].nil?
  errors.push("Report Name cannot be empty")
end

if !errors.empty?
  raise "#{errors.join("\n")}"
end

%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents>
                    <task label="" type="Complete" value="">utilities_echo_v1_2</task>
                </dependents>
            </task>
            <task definition_id="system_tree_return_v1" id="system_tree_return_v1_17" name="Return" x="683" y="110">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter id="Success" label="Success" menu="" required="false" tooltip="'true' or 'false'">&lt;%=JSON.parse(@results['Parse or handle output']['output'])['Success']%&gt;</parameter>
                    <parameter id="Output" label="Output" menu="" required="false" tooltip="The output from the call - either the XML/JSON block, or the error message">&lt;%=JSON.parse(@results['Parse or handle output']['output'])['Full Output JSON'].to_json%&gt;</parameter>
                </parameters>
                <messages>
                    <message type="Create"></message>
                    <message type="Update"></message>
                    <message type="Complete"></message>
                </messages>
                <dependents></dependents>
            </task>
        </request>
    </taskTree>
</tree>