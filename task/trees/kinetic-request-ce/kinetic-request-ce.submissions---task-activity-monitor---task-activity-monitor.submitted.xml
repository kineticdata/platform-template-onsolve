<tree schema_version="1.0">
<sourceName>Kinetic Request CE</sourceName>
<sourceGroup>Submissions > task-activity-monitor > task-activity-monitor</sourceGroup>
<type>Tree</type>
<status>Active</status>
<taskTree builder_version="" schema_version="1.0" version="">
    <name>Submitted</name>
    <author/>
    <notes/>
    <lastID>101</lastID>
    <request>
        <task definition_id="system_start_v1" id="start" name="Start" x="10" y="10">
            <version>1</version>
            <configured>true</configured>
            <defers>false</defers>
            <deferrable>false</deferrable>
            <visible>false</visible>
            <parameters/>
            <messages/>
            <dependents><task label="" type="Complete" value="">kinetic_request_ce_submission_update_v1_49</task></dependents>
        </task>
    
        
      
        <task definition_id="kinetic_request_ce_datastore_submission_retrieve_v1" id="kinetic_request_ce_datastore_submission_retrieve_v1_2" name="Retrieve Integration Config" x="11" y="251">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="error_handling" label="Error Handling" menu="Error Message,Raise Error" required="true" tooltip="Determine what to return if an error is encountered.">Raise Error</parameter>
        <parameter id="space_slug" label="Space Slug" menu="" required="false" tooltip="The Space the submission is being retrieved from (defaults to info value if not provided)."/>
        <parameter id="retrieve_by" label="Retrieve By" menu="Id,Query" required="true" tooltip="How to retrieve the submission. Id or Query.">Id</parameter>
        <!-- Retrieve By Query parameters -->
        <parameter dependsOnId="retrieve_by" dependsOnValue="Query" id="form_slug" label="Datastore Form Slug" menu="" required="false" tooltip="Slug of the form to query"/>
        <parameter dependsOnId="retrieve_by" dependsOnValue="Query" id="index" label="Index" menu="" required="false" tooltip="The index to use for the search/retrieval"/>
        <parameter dependsOnId="retrieve_by" dependsOnValue="Query" id="query" label="Query" menu="" required="false" tooltip="A query that will retrieve a single submission"/>
        <!-- Retrieve By Id parameters -->
        <parameter dependsOnId="retrieve_by" dependsOnValue="Id" id="submission_id" label="Datastore Submission Id" menu="" required="false" tooltip="The id of the submission being retrieved.">&lt;%= @values['Integration Id']%&gt;</parameter>
    </parameters>
            <messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents><task label="" type="Complete" value="">utilities_defer_v1_95</task></dependents>
    </task>
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        <task definition_id="system_noop_v1" id="system_noop_v1_17" name="End" x="466" y="769">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>false</visible>
      <parameters/>
            <messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents/>
    </task>
      
        
      
        
      
        
      
        
      
        
      
        
      
        <task definition_id="utilities_echo_v1" id="utilities_echo_v1_24" name="Coding Notes" x="134" y="12">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="input" label="Input" menu="" required="true" tooltip="">1.  Querying - If we use the "minutely" approach from Robot, it'll only trigger when a previous run returns.  If we (a) change how minutely works in Robot or want to always trigger this every x minutes regardless of whether a previous run has completed, we'd need to be clever about querying -- looking at dates of previous runs to make sure we don't retrieve the same record.

2.  Regarding using routines for retrieving attributes -- no one is monitoring queue for these actions.  The current Never Drop / Never Fail will not be monitored.  Therefore, I didn't use the routines, but just used the native handler.

3.  We are using trees instead of routines because they need to be dynamic based on the configuration process.  A routine has to be predefined using a handler.  The data for what to fire is fed in from the integration configuration data.

4.  How do we handle the notification data?  If we do everything in one tree we don't need to store the data we process form the notifications.  If we retrieve it in each routine, we're retrieving the same data againa and again.  If we retrieve it one, but use routines for SWN and MIR3, we're possibly passing the data around to multiple actions again and again...  Do we care / have any concerns?  STRATEGY DECISION:  PASS DATA AROUND unless an intentional part of the process is to identify new data.  Otherwise, the data could "always" be changing and you can't recreate something from a some previous period.
</parameter>
    </parameters>
            <messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents/>
    </task>
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        <task definition_id="kinetic_request_ce_datastore_submission_create_v1" id="kinetic_request_ce_datastore_submission_create_v1_36" name="Add Task Run Cleanup Entry" x="661" y="660">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="error_handling" label="Error Handling" menu="Error Message,Raise Error" required="true" tooltip="Determine what to return if an error is encountered.">Raise Error</parameter>
        <parameter id="space_slug" label="Space Slug" menu="" required="false" tooltip="The Space the submission is being created in (defaults to info value if not provided)."/>
        <parameter id="form_slug" label="Datastore Form Slug" menu="" required="true" tooltip="The slug of the datastore form the submission is for.">task-run-cleanup</parameter>
        <parameter id="values" label="Values" menu="" required="false" tooltip="JSON map of submission field values.">&lt;%=
duration = JSON.parse(@results['Retrieve Integration Config']['Values JSON'])['Task History Duration'].to_i

{
  "Task Run Id" =&gt; @run['Id'],
  "Delete After Date Time" =&gt; (Time.now + (86400 * duration)).iso8601
}.to_json%&gt;</parameter>
        <parameter id="current_page_name" label="Current Page Name" menu="" required="false" tooltip="Set the current page name."/>
        <parameter id="current_page_navigation" label="Current Page Navigation" menu="" required="false" tooltip="Set the current page navigation."/>
    </parameters>
            <messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents><task label="" type="Complete" value="">system_noop_v1_17</task></dependents>
    </task>
      
        
      
        
      
        
      
        <task definition_id="kinetic_request_ce_submission_activity_create_v1" id="kinetic_request_ce_submission_activity_create_v1_40" name="Add Activity Record" x="462" y="22">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>false</visible>
      <parameters>
        <parameter id="error_handling" label="Error Handling" menu="Error Message,Raise Error" required="true" tooltip="Determine what to return if an error is encountered.">Raise Error</parameter>
        <parameter id="space_slug" label="Space Slug" menu="" required="false" tooltip="The Space the submission exists in (defaults to info value if not provided)."/>
        <parameter id="submission_id" label="Submission Id" menu="" required="true" tooltip="The id of the submission for which the activity is being created for.">&lt;%= @submission['Id']%&gt;</parameter>
        <parameter id="label" label="Label" menu="" required="false" tooltip="The label for the submission activity.">MIR3 Notification Initiated</parameter>
        <parameter id="description" label="Description" menu="" required="false" tooltip="The description of the submission activity."/>
        <parameter id="type" label="Type" menu="" required="false" tooltip="Specifies the a submission activity 'Type', which should indicate what type of data is included.">Notification Initiated</parameter>
        <parameter id="data" label="Data" menu="" required="false" tooltip="Additional data that can be used by resources consuming the submission activity record (for example a Request bundle may render submission details based upon JSON content in the activity data)."/>
    </parameters><messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents/>
    </task>
      
        
      
        <task definition_id="kinetic_request_ce_submission_update_v1" id="kinetic_request_ce_submission_update_v1_42" name="Update Submission: Deferral Token" x="460" y="111">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="error_handling" label="Error Handling" menu="Error Message,Raise Error" required="true" tooltip="Determine what to return if an error is encountered.">Raise Error</parameter>
        <parameter id="space_slug" label="Space Slug" menu="" required="false" tooltip="The Space the submission is being retrieved from (defaults to info value if not provided)."/>
        <parameter id="submission_id" label="Submission Id" menu="" required="true" tooltip="The id of the submission being updated.">&lt;%= @submission['Id']%&gt;</parameter>
        <parameter id="state" label="State" menu="" required="false" tooltip="The value used to set the submission state."/>
        <parameter id="values" label="Values" menu="" required="false" tooltip="A JSON map of field names to values that should be set.">&lt;%=
{
 "Deferral Token" =&gt; @results['Defer']['deferral_token']
}.to_json
%&gt;</parameter>
        <parameter id="current_page_name" label="Current Page Name" menu="" required="false" tooltip="Set the current page name."/>
        <parameter id="current_page_navigation" label="Current Page Navigation" menu="" required="false" tooltip="Set the current page navigation."/>
        <parameter id="origin_id" label="Origin ID" menu="" required="false" tooltip="Set the origin ID."/>
        <parameter id="parent_id" label="Parent ID" menu="" required="false" tooltip="Set the parent ID."/>
    </parameters><messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents><task label="Interim Updates" type="Complete" value="JSON.parse(@results['Retrieve Integration Config']['Values JSON'])['Interim Notification Updates'] == &quot;Yes&quot;">system_wait_v1_63</task></dependents>
    </task>
      
        <task definition_id="utilities_defer_v1" id="utilities_defer_v1_43" name="Defer" x="460" y="254">
      <version>1</version>
      <configured>true</configured>
      <defers>true</defers>
      <deferrable>true</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="deferral_value" label="Initial Deferral Value" menu="" required="false" tooltip=""/>
    </parameters><messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents><task label="" type="Create" value="">kinetic_request_ce_submission_update_v1_42</task><task label="" type="Complete" value="">system_junction_v1_61</task><task label="" type="Update" value="">utilities_echo_v1_83</task></dependents>
    </task>
      
        <task definition_id="kinetic_request_ce_submission_update_v1" id="kinetic_request_ce_submission_update_v1_44" name="Close Submission" x="462" y="473">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="error_handling" label="Error Handling" menu="Error Message,Raise Error" required="true" tooltip="Determine what to return if an error is encountered.">Raise Error</parameter>
        <parameter id="space_slug" label="Space Slug" menu="" required="false" tooltip="The Space the submission is being retrieved from (defaults to info value if not provided)."/>
        <parameter id="submission_id" label="Submission Id" menu="" required="true" tooltip="The id of the submission being updated.">&lt;%= @submission['Id']%&gt;</parameter>
        <parameter id="state" label="State" menu="" required="false" tooltip="The value used to set the submission state.">Closed</parameter>
        <parameter id="values" label="Values" menu="" required="false" tooltip="A JSON map of field names to values that should be set.">&lt;%=
{"Onsolve Status" =&gt; "Closed"}.to_json
%&gt;</parameter>
        <parameter id="current_page_name" label="Current Page Name" menu="" required="false" tooltip="Set the current page name."/>
        <parameter id="current_page_navigation" label="Current Page Navigation" menu="" required="false" tooltip="Set the current page navigation."/>
        <parameter id="origin_id" label="Origin ID" menu="" required="false" tooltip="Set the origin ID."/>
        <parameter id="parent_id" label="Parent ID" menu="" required="false" tooltip="Set the parent ID."/>
    </parameters><messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents><task label="No Resp Expected" type="Complete" value="@values['Response Expected'] != &quot;Yes&quot;">system_junction_v1_74</task><task label="Resp Expected" type="Complete" value="@values['Response Expected'] == &quot;Yes&quot;">utilities_defer_v1_79</task></dependents>
    </task>
      
        
      
        
      
        
      
        
      
        <task definition_id="kinetic_request_ce_submission_update_v1" id="kinetic_request_ce_submission_update_v1_49" name="Update Submission with RunId" x="11" y="109">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="error_handling" label="Error Handling" menu="Error Message,Raise Error" required="true" tooltip="Determine what to return if an error is encountered.">Raise Error</parameter>
        <parameter id="space_slug" label="Space Slug" menu="" required="false" tooltip="The Space the submission is being retrieved from (defaults to info value if not provided)."/>
        <parameter id="submission_id" label="Submission Id" menu="" required="true" tooltip="The id of the submission being updated.">&lt;%= @submission['Id']%&gt;</parameter>
        <parameter id="state" label="State" menu="" required="false" tooltip="The value used to set the submission state."/>
        <parameter id="values" label="Values" menu="" required="false" tooltip="A JSON map of field names to values that should be set.">&lt;%=
{
  "Task Tree Name" =&gt; "Kinetic Request CE :: Submissions &gt; task-activity-monitor &gt; task-activity-monitor :: Submitted",
  "Task Run Id" =&gt; @run['Id'],
}.to_json
%&gt;</parameter>
        <parameter id="current_page_name" label="Current Page Name" menu="" required="false" tooltip="Set the current page name."/>
        <parameter id="current_page_navigation" label="Current Page Navigation" menu="" required="false" tooltip="Set the current page navigation."/>
        <parameter id="origin_id" label="Origin ID" menu="" required="false" tooltip="Set the origin ID."/>
        <parameter id="parent_id" label="Parent ID" menu="" required="false" tooltip="Set the parent ID."/>
    </parameters><messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents><task label="" type="Complete" value="">kinetic_request_ce_datastore_submission_retrieve_v1_2</task></dependents>
    </task>
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        <task definition_id="system_junction_v1" id="system_junction_v1_61" name="Junction: Defer" x="460" y="362">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>false</visible>
      <parameters/><messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents><task label="" type="Complete" value="">kinetic_request_ce_submission_update_v1_44</task></dependents>
    </task>
      
        
      
        <task definition_id="system_wait_v1" id="system_wait_v1_63" name="Wait 1 minute" x="662" y="121">
      <version>1</version>
      <configured>true</configured>
      <defers>true</defers>
      <deferrable>true</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="Time to wait" label="Wait time:" menu="" required="true" tooltip="Time you want to wait for deferred task">1</parameter>
        <parameter id="Time unit" label="Time unit:" menu="Second,Minute,Hour,Day,Week" required="true" tooltip="Unit of measurement for time (Seconds, Minutes, Hours, Days, Weeks)">Minute</parameter>
    </parameters><messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents><task label="" type="Complete" value="">kinetic_request_ce_submission_get_answers_v1_101</task></dependents>
    </task>
      
        <task definition_id="utilities_create_trigger_v1" id="utilities_create_trigger_v1_64" name="Send Update Trigger" x="1027" y="111">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="action_type" label="Action Type" menu="Update,Complete" required="true" tooltip="">Update</parameter>
        <parameter id="deferral_token" label="Deferral Token" menu="" required="true" tooltip="">&lt;%=@results['Defer']['deferral_token']%&gt;</parameter>
        <parameter id="deferred_variables" label="Deferred Results" menu="" required="false" tooltip=""/>
        <parameter id="message" label="Message" menu="" required="false" tooltip="">Check Status</parameter>
    </parameters><messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents/>
    </task>
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        <task definition_id="system_junction_v1" id="system_junction_v1_74" name="Junction: Close" x="463" y="594">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>false</visible>
      <parameters/><messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents><task label="Forever" type="Complete" value="JSON.parse(@results['Retrieve Integration Config']['Values JSON'])['Keep Task History'] != &quot;Not Forever&quot;">system_noop_v1_17</task><task label="Not Forever" type="Complete" value="JSON.parse(@results['Retrieve Integration Config']['Values JSON'])['Keep Task History'] == &quot;Not Forever&quot;">kinetic_request_ce_datastore_submission_create_v1_36</task></dependents>
    </task>
      
        
      
        
      
        
      
        
      
        <task definition_id="utilities_defer_v1" id="utilities_defer_v1_79" name="Defer: Complete Process" x="661" y="472">
      <version>1</version>
      <configured>true</configured>
      <defers>true</defers>
      <deferrable>true</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="deferral_value" label="Initial Deferral Value" menu="" required="false" tooltip=""/>
    </parameters><messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents><task label="" type="Complete" value="">system_junction_v1_74</task><task label="Custom Process" type="Create" value="JSON( @results['Retrieve Integration Config']['Values JSON'] )['Notification Result Action'] == &quot;Custom Action&quot;">kinetic_task_tree_run_v2_92</task><task label="Standard Process" type="Create" value="JSON( @results['Retrieve Integration Config']['Values JSON'] )['Notification Result Action'] != &quot;Custom Action&quot;">kinetic_task_tree_run_v2_93</task></dependents>
    </task>
      
        
      
        
      
        
      
        <task definition_id="utilities_echo_v1" id="utilities_echo_v1_83" name="Echo Trigger Message" x="657" y="231">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="input" label="Input" menu="" required="true" tooltip="">&lt;%=@trigger['Message']%&gt;</parameter>
    </parameters><messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents><task label="Stop Notification" type="Complete" value="@results['Echo Trigger Message']['output'] == &quot;Stop Notification&quot;">routine_onsolve_mir3_stop_notification_v1_89</task><task label="Custom Process" type="Complete" value="@results['Echo Trigger Message']['output'] == &quot;Check Status&quot; &amp;&amp; JSON( @results['Retrieve Integration Config']['Values JSON'] )['Interim Update Action'] == &quot;Custom Action&quot;">kinetic_task_tree_run_v2_90</task><task label="Standard Process" type="Complete" value="@results['Echo Trigger Message']['output'] == &quot;Check Status&quot; &amp;&amp; JSON( @results['Retrieve Integration Config']['Values JSON'] )['Interim Update Action'] != &quot;Custom Action&quot;">kinetic_task_tree_run_v2_91</task></dependents>
    </task>
      
        
      
        
      
        
      
        
      
        
      
        <task definition_id="routine_onsolve_mir3_stop_notification_v1" id="routine_onsolve_mir3_stop_notification_v1_89" name="Stop Notification" x="664" y="363">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>true</deferrable>
      <visible>false</visible>
      <parameters>
            <parameter id="UUIDs JSON" label="UUIDs JSON" menu="" required="true" tooltip="A JSON object of open MIR3 Notification UUIDs">&lt;%=[@results['Defer: Initial Notification Process']['Onsolve Notification UUID']].to_json%&gt;</parameter>
        </parameters><messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents/>
    </task>
      
        <task definition_id="kinetic_task_tree_run_v2" id="kinetic_task_tree_run_v2_90" name="Initiate Custom Interim Action Tree" x="891" y="296">
      <version>2</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="source" label="Source" menu="" required="true" tooltip="The source for the tree you want to run.">OnSolve</parameter>
        <parameter id="group" label="Group" menu="" required="true" tooltip="The group of the tree you want to run.">Integrations</parameter>
        <parameter id="tree_name" label="Tree Name" menu="" required="true" tooltip="The name of the tree you want to run.">&lt;%=JSON( @results['Retrieve Integration Config']['Values JSON'] )['Interim Custom Action Task Tree']%&gt;</parameter>
        <parameter id="body" label="Body" menu="" required="false" tooltip="A JSON string of name/value pairs that will be passed to the tree as body content.">&lt;%=
{
  "Integration Configuration" =&gt; JSON.parse( @results['Retrieve Integration Config']['Values JSON'] ),
  "Task Activity Monitor Submission" =&gt; @submission['Id'],
  "Deferral Token" =&gt; @results['Defer']['deferral_token']
}.to_json
%&gt;</parameter> 
        <parameter id="signature_key" label="Signature Key" menu="" required="false" tooltip="The id of the access key to use to sign the request (overrides info value)."/> 
        <parameter id="signature_secret" label="Signature Secret" menu="" required="false" tooltip="The secret of the access key to use to sign the request (overrides info value)."/> 
    </parameters><messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents/>
    </task>
      
        <task definition_id="kinetic_task_tree_run_v2" id="kinetic_task_tree_run_v2_91" name="Initiate Standard Interim Action Tree" x="888" y="200">
      <version>2</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="source" label="Source" menu="" required="true" tooltip="The source for the tree you want to run.">OnSolve</parameter>
        <parameter id="group" label="Group" menu="" required="true" tooltip="The group of the tree you want to run.">Integrations</parameter>
        <parameter id="tree_name" label="Tree Name" menu="" required="true" tooltip="The name of the tree you want to run.">&lt;%=JSON( @results['Retrieve Integration Config']['Values JSON'] )['Interim Standard Action Task Tree']%&gt;</parameter>
        <parameter id="body" label="Body" menu="" required="false" tooltip="A JSON string of name/value pairs that will be passed to the tree as body content.">&lt;%=
{
  "Integration Configuration" =&gt; JSON.parse( @results['Retrieve Integration Config']['Values JSON'] ),
  "Task Activity Monitor Submission" =&gt; @submission['Id'],
  "Deferral Token" =&gt; @results['Defer']['deferral_token']
}.to_json
%&gt;</parameter> 
        <parameter id="signature_key" label="Signature Key" menu="" required="false" tooltip="The id of the access key to use to sign the request (overrides info value)."/> 
        <parameter id="signature_secret" label="Signature Secret" menu="" required="false" tooltip="The secret of the access key to use to sign the request (overrides info value)."/> 
    </parameters><messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents/>
    </task>
      
        <task definition_id="kinetic_task_tree_run_v2" id="kinetic_task_tree_run_v2_92" name="Initiate Custom Result Action Tree" x="893" y="528">
      <version>2</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="source" label="Source" menu="" required="true" tooltip="The source for the tree you want to run.">OnSolve</parameter>
        <parameter id="group" label="Group" menu="" required="true" tooltip="The group of the tree you want to run.">Integrations</parameter>
        <parameter id="tree_name" label="Tree Name" menu="" required="true" tooltip="The name of the tree you want to run.">&lt;%=JSON( @results['Retrieve Integration Config']['Values JSON'] )['Result Custom Action Task Tree']%&gt;</parameter>
        <parameter id="body" label="Body" menu="" required="false" tooltip="A JSON string of name/value pairs that will be passed to the tree as body content.">&lt;%=
{
  "Integration Configuration" =&gt; JSON.parse( @results['Retrieve Integration Config']['Values JSON'] ),
  "Task Activity Monitor Submission" =&gt; @submission['Id'],
  "Deferral Token" =&gt; @results['Defer: Complete Process']['deferral_token']
}.to_json
%&gt;</parameter> 
        <parameter id="signature_key" label="Signature Key" menu="" required="false" tooltip="The id of the access key to use to sign the request (overrides info value)."/> 
        <parameter id="signature_secret" label="Signature Secret" menu="" required="false" tooltip="The secret of the access key to use to sign the request (overrides info value)."/> 
    </parameters><messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents/>
    </task>
      
        <task definition_id="kinetic_task_tree_run_v2" id="kinetic_task_tree_run_v2_93" name="Initiate Standard Result Action Tree" x="893" y="429">
      <version>2</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="source" label="Source" menu="" required="true" tooltip="The source for the tree you want to run.">OnSolve</parameter>
        <parameter id="group" label="Group" menu="" required="true" tooltip="The group of the tree you want to run.">Integrations</parameter>
        <parameter id="tree_name" label="Tree Name" menu="" required="true" tooltip="The name of the tree you want to run.">&lt;%=JSON( @results['Retrieve Integration Config']['Values JSON'] )['Result Standard Action Task Tree']%&gt;</parameter>
        <parameter id="body" label="Body" menu="" required="false" tooltip="A JSON string of name/value pairs that will be passed to the tree as body content.">&lt;%=
{
  "Integration Configuration" =&gt; JSON.parse( @results['Retrieve Integration Config']['Values JSON'] ),
  "Task Activity Monitor Submission" =&gt; @submission['Id'],
  "Deferral Token" =&gt; @results['Defer: Complete Process']['deferral_token']
}.to_json
%&gt;</parameter> 
        <parameter id="signature_key" label="Signature Key" menu="" required="false" tooltip="The id of the access key to use to sign the request (overrides info value)."/> 
        <parameter id="signature_secret" label="Signature Secret" menu="" required="false" tooltip="The secret of the access key to use to sign the request (overrides info value)."/> 
    </parameters><messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents/>
    </task>
      
        <task definition_id="kinetic_task_tree_run_v2" id="kinetic_task_tree_run_v2_94" name="Initiate Standard Notification Tree" x="99" y="407">
      <version>2</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="source" label="Source" menu="" required="true" tooltip="The source for the tree you want to run.">OnSolve</parameter>
        <parameter id="group" label="Group" menu="" required="true" tooltip="The group of the tree you want to run.">Integrations</parameter>
        <parameter id="tree_name" label="Tree Name" menu="" required="true" tooltip="The name of the tree you want to run.">&lt;%=JSON( @results['Retrieve Integration Config']['Values JSON'] )['Initiation Standard Action Task Tree']%&gt;</parameter>
        <parameter id="body" label="Body" menu="" required="false" tooltip="A JSON string of name/value pairs that will be passed to the tree as body content.">&lt;%=
{
  "Integration Configuration" =&gt; JSON.parse( @results['Retrieve Integration Config']['Values JSON'] ),
  "Task Activity Monitor Submission" =&gt; @submission['Id'],
  "Source Id" =&gt; @values['Source Id'],
  "Source Data" =&gt; begin JSON.parse( @values['Source Data'] ) rescue @values['Source Data'] end,
  "MIR3 Unique User Match Field" =&gt; @values['MIR3 Unique User Match Field'],
  "Onsolve Product" =&gt; @kapp_attributes['OnSolve Product'],
  "Deferral Token" =&gt; @results['Defer: Initial Notification Process']['deferral_token']
}.to_json
%&gt;</parameter> 
        <parameter id="signature_key" label="Signature Key" menu="" required="false" tooltip="The id of the access key to use to sign the request (overrides info value)."/> 
        <parameter id="signature_secret" label="Signature Secret" menu="" required="false" tooltip="The secret of the access key to use to sign the request (overrides info value)."/> 
    </parameters><messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents/>
    </task>
      
        <task definition_id="utilities_defer_v1" id="utilities_defer_v1_95" name="Defer: Initial Notification Process" x="168" y="252">
      <version>1</version>
      <configured>true</configured>
      <defers>true</defers>
      <deferrable>true</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="deferral_value" label="Initial Deferral Value" menu="" required="false" tooltip=""/>
    </parameters><messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents><task label="Standard Process" type="Create" value="JSON( @results['Retrieve Integration Config']['Values JSON'] )['Notification Initiation Action'] != &quot;Custom Action&quot;">kinetic_task_tree_run_v2_94</task><task label="Resp Expected" type="Complete" value="@values['Response Expected'] == &quot;Yes&quot;">utilities_defer_v1_43</task><task label="No Resp Expected" type="Complete" value="!@values['Response Expected'] == &quot;Yes&quot;">system_junction_v1_61</task><task label="Custom Process" type="Create" value="JSON( @results['Retrieve Integration Config']['Values JSON'] )['Notification Initiation Action'] == &quot;Custom Action&quot;">kinetic_task_tree_run_v2_98</task></dependents>
    </task>
      
        
      
        
      
        <task definition_id="kinetic_task_tree_run_v2" id="kinetic_task_tree_run_v2_98" name="Initiate Custom Notification Tree" x="221" y="407">
      <version>2</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="source" label="Source" menu="" required="true" tooltip="The source for the tree you want to run.">OnSolve</parameter>
        <parameter id="group" label="Group" menu="" required="true" tooltip="The group of the tree you want to run.">Integrations</parameter>
        <parameter id="tree_name" label="Tree Name" menu="" required="true" tooltip="The name of the tree you want to run.">&lt;%=JSON( @results['Retrieve Integration Config']['Values JSON'] )['Initiation Custom Action Task Tree']%&gt;</parameter>
        <parameter id="body" label="Body" menu="" required="false" tooltip="A JSON string of name/value pairs that will be passed to the tree as body content.">&lt;%=
{
  "Integration Configuration" =&gt; JSON.parse( @results['Retrieve Integration Config']['Values JSON'] ),
  "Task Activity Monitor Submission" =&gt; @submission['Id'],
  "Source Id" =&gt; @values['Source Id'],
  "Source Data" =&gt; begin JSON.parse( @values['Source Data'] ) rescue @values['Source Data'] end,
  "MIR3 Unique User Match Field" =&gt; @values['MIR3 Unique User Match Field'],
  "Onsolve Product" =&gt; @kapp_attributes['OnSolve Product'],
  "Deferral Token" =&gt; @results['Defer: Initial Notification Process']['deferral_token']
}.to_json
%&gt;</parameter> 
        <parameter id="signature_key" label="Signature Key" menu="" required="false" tooltip="The id of the access key to use to sign the request (overrides info value)."/> 
        <parameter id="signature_secret" label="Signature Secret" menu="" required="false" tooltip="The secret of the access key to use to sign the request (overrides info value)."/> 
    </parameters><messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents/>
    </task>
      
        
      
        
      
        <task definition_id="kinetic_request_ce_submission_get_answers_v1" id="kinetic_request_ce_submission_get_answers_v1_101" name="Get Submission Answers" x="851" y="111">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>false</visible>
      <parameters>
        <parameter id="error_handling" label="Error Handling" menu="Error Message,Raise Error" required="true" tooltip="Determine what to return if an error is encountered.">Raise Error</parameter>
        <parameter id="space_slug" label="Space Slug" menu="" required="false" tooltip="The Space the submission is being retrieved from."/>
        <parameter id="submission_id" label="Submission ID" menu="" required="true" tooltip="The id of the submission to retrieve answers for.">&lt;%= @submission['Id']%&gt;</parameter>
    </parameters><messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents><task label="Not Closed" type="Complete" value="@results['Get Submission Answers']['Onsolve Status'] != &quot;Closed&quot;">utilities_create_trigger_v1_64</task></dependents>
    </task>
      </request>
</taskTree></tree>