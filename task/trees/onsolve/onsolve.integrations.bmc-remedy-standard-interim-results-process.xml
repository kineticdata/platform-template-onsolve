<tree schema_version="1.0">
<sourceName>OnSolve</sourceName>
<sourceGroup>Integrations</sourceGroup>
<type>Tree</type>
<status>Active</status>
<taskTree builder_version="" schema_version="1.0" version="">
    <name>BMC Remedy Standard Interim Results Process</name>
    <author/>
    <notes/>
    <lastID>44</lastID>
    <request>
        <task definition_id="system_start_v1" id="start" name="Start" x="10" y="10">
            <version>1</version>
            <configured>true</configured>
            <defers>false</defers>
            <deferrable>false</deferrable>
            <visible>false</visible>
            <parameters/>
            <messages/>
            <dependents>
                
            
            <task label="" type="Complete" value="">kinetic_request_ce_submission_activity_create_v1_32</task></dependents>
        </task>
    
        <task definition_id="utilities_create_trigger_v1" id="utilities_create_trigger_v1_1" name="Send Update Trigger" x="811" y="517">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="action_type" label="Action Type" menu="Update,Complete" required="true" tooltip="">Update</parameter>
        <parameter id="deferral_token" label="Deferral Token" menu="" required="true" tooltip="">&lt;%=
JSON.parse(@source['Data'])['Deferral Token']
%&gt;</parameter>
        <parameter id="deferred_variables" label="Deferred Results" menu="" required="false" tooltip=""/>
        <parameter id="message" label="Message" menu="" required="false" tooltip="">Check Status</parameter>
    </parameters>
            <messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents>
            <task label="" type="Complete" value="">system_junction_v1_24</task>
            </dependents>
    </task>
      
        
      
        
      
        
      
        <task definition_id="kinetic_request_ce_submission_get_answers_v1" id="kinetic_request_ce_submission_get_answers_v1_5" name="Get Task Activity Monitoring Values" x="154" y="231">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>false</visible>
      <parameters>
        <parameter id="error_handling" label="Error Handling" menu="Error Message,Raise Error" required="true" tooltip="Determine what to return if an error is encountered.">Raise Error</parameter>
        <parameter id="space_slug" label="Space Slug" menu="" required="false" tooltip="The Space the submission is being retrieved from."/>
        <parameter id="submission_id" label="Submission ID" menu="" required="true" tooltip="The id of the submission to retrieve answers for.">&lt;%=JSON.parse(@source['Data'])['Task Activity Monitor Submission']%&gt;</parameter>
    </parameters>
            <messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents>
                
            <task label="" type="Complete" value="">routine_onsolve_mir3_get_integration_report_results_29</task>
            </dependents>
    </task>
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        <task definition_id="utilities_echo_v1" id="utilities_echo_v1_13" name="Issues / Questions with form" x="151" y="11">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="input" label="Input" menu="" required="true" tooltip="">1. How do we know where to write data?  In a polling scenario, we need to use might be able to use the configured schema name, but what field?  In a push situation (ServiceNow pushes to us), how do we know where it came from, and if we should write to the same form and/or field.  ***Maybe the 'sys_class_name' field on the record would work in all cases?  It seems to provide the form name for the few that I've tried***   As for what field to write to, I think we need to add data to the config form, or as an input parameter for the interim/complete processes.

2. Work Note updates and assignment should NOT trigger the query to find this ticket again.  How do we control that?  Do we need to have a rule that says our userID as "last updater" doesn't get included in the results?

4.  MIR3 vs. SWN should be handled here.

5.  Replace the Get Values handlers with a search where we can return a limited amount of data.  We don't need all the info, and the original details from ServiceNow will be too big and unnecessary to retrieve.</parameter>
    </parameters>
            <messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents/>
    </task>
      
        <task definition_id="utilities_echo_v1" id="utilities_echo_v1_14" name="Assemble Work Note" x="649" y="155">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="input" label="Input" menu="" required="true" tooltip="">&lt;%=
report_output = JSON.parse(@results['Get Integration Report Results']['Output'])
report_result = report_output['execute_custom_report_response']['report_detail']
headers = report_result['header']['column_name']
rows = []
rows = report_result['row'] if report_result['row'].is_a? (Array)
rows = [report_result['row']] if report_result['row'].is_a? (Hash)

work_note_text = "Alerting Interim Update (UUID: @results['Get Task Activity Monitoring Values']['Onsolve Id'])"

display_line_index = headers.find_index('DISPLAYLINE');
rows.each{|row|
  work_note_text += "\n#{row['value'][display_line_index]}"
}

work_note_text
%&gt;</parameter>
    </parameters>
            <messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents>
                
            
            <task type="Complete" label="" value="">utilities_echo_v1_26</task></dependents>
    </task>
      
        
      
        
      
        <task definition_id="kinetic_request_ce_datastore_submission_create_v1" id="kinetic_request_ce_datastore_submission_create_v1_17" name="Add Task Run Cleanup Entry" x="440" y="639">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="error_handling" label="Error Handling" menu="Error Message,Raise Error" required="true" tooltip="Determine what to return if an error is encountered.">Error Message</parameter>
        <parameter id="space_slug" label="Space Slug" menu="" required="false" tooltip="The Space the submission is being created in (defaults to info value if not provided)."/>
        <parameter id="form_slug" label="Datastore Form Slug" menu="" required="true" tooltip="The slug of the datastore form the submission is for.">task-run-cleanup</parameter>
        <parameter id="values" label="Values" menu="" required="false" tooltip="JSON map of submission field values.">&lt;%=
integration_config = JSON.parse(@source['Data'])['Integration Configuration']
duration = integration_config['Task History Duration'].to_i

{
  "Task Run Id" =&gt; @run['Id'],
  "Delete After Date Time" =&gt; (Time.now + (86400 * duration)).iso8601
}.to_json%&gt;</parameter>
        <parameter id="current_page_name" label="Current Page Name" menu="" required="false" tooltip="Set the current page name."/>
        <parameter id="current_page_navigation" label="Current Page Navigation" menu="" required="false" tooltip="Set the current page navigation."/>
    </parameters>
            <messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents>
                
            <task label="" type="Complete" value="">system_junction_v1_35</task></dependents>
    </task>
      
        <task definition_id="system_noop_v1" id="system_noop_v1_18" name="End" x="815" y="671">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>false</visible>
      <parameters/>
            <messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents/>
    </task>
      
        
      
        
      
        <task definition_id="kinetic_request_ce_submission_get_answers_v1" id="kinetic_request_ce_submission_get_answers_v1_21" name="Re-Get Task Activity Monitoring Values" x="440" y="229">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>false</visible>
      <parameters>
        <parameter id="error_handling" label="Error Handling" menu="Error Message,Raise Error" required="true" tooltip="Determine what to return if an error is encountered.">Raise Error</parameter>
        <parameter id="space_slug" label="Space Slug" menu="" required="false" tooltip="The Space the submission is being retrieved from."/>
        <parameter id="submission_id" label="Submission ID" menu="" required="true" tooltip="The id of the submission to retrieve answers for.">&lt;%=JSON.parse(@source['Data'])['Task Activity Monitor Submission']%&gt;</parameter>
    </parameters>
            <messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents>
                
                
            <task label="Closed" type="Complete" value="@results['Re-Get Task Activity Monitoring Values']['Onsolve Status'] == &quot;Closed&quot;">kinetic_request_ce_submission_activity_update_v1_34</task><task label="Not Closed" type="Complete" value="@results['Re-Get Task Activity Monitoring Values']['Onsolve Status'] != &quot;Closed&quot;">system_noop_v1_36</task><task type="Complete" label="Not Closed" value="@results['Re-Get Task Activity Monitoring Values']['Onsolve Status'] != &quot;Closed&quot;">system_wait_v1_22</task></dependents>
    </task>
      
        <task definition_id="system_wait_v1" id="system_wait_v1_22" name="Wait Interval" x="649" y="254">
      <version>1</version>
      <configured>true</configured>
      <defers>true</defers>
      <deferrable>true</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="Time to wait" label="Wait time:" menu="" required="true" tooltip="Time you want to wait for deferred task">&lt;%=
integration_config = JSON.parse(@source['Data'])['Integration Configuration']
interval_input = JSON.parse( @source['Data'] || "{}")['Interim Update Interval']
interval_input.to_i &gt; 5 ? interval_input.to_i : 5
%&gt;</parameter>
        <parameter id="Time unit" label="Time unit:" menu="Second,Minute,Hour,Day,Week" required="true" tooltip="Unit of measurement for time (Seconds, Minutes, Hours, Days, Weeks)">Minute</parameter>
    </parameters>
            <messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents>
                <task label="" type="Complete" value="">kinetic_request_ce_submission_get_answers_v1_27</task>
            </dependents>
    </task>
      
        
      
        <task definition_id="system_junction_v1" id="system_junction_v1_24" name="Junction" x="651" y="538">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>false</visible>
      <parameters/>
            <messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents>
                <task label="Not Forever" type="Complete" value="integration_config = JSON.parse(@source['Data'])['Integration Configuration']&#xA;integration_config['Keep Task History'] == &quot;Not Forever&quot;">kinetic_request_ce_datastore_submission_create_v1_17</task>
                
            <task label="Forever" type="Complete" value="integration_config = JSON.parse(@source['Data'])['Integration Configuration']&#xA;integration_config['Keep Task History'] != &quot;Not Forever&quot;">system_junction_v1_35</task></dependents>
    </task>
      
        <task definition_id="kinetic_request_ce_submission_update_v1" id="kinetic_request_ce_submission_update_v1_25" name="Update Task Activity Record with Last Activity Time" x="968" y="122">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="error_handling" label="Error Handling" menu="Error Message,Raise Error" required="true" tooltip="Determine what to return if an error is encountered.">Raise Error</parameter>
        <parameter id="space_slug" label="Space Slug" menu="" required="false" tooltip="The Space the submission is being retrieved from (defaults to info value if not provided)."/>
        <parameter id="submission_id" label="Submission Id" menu="" required="true" tooltip="The id of the submission being updated.">&lt;%=JSON.parse(@source['Data'])['Task Activity Monitor Submission']%&gt;</parameter>
        <parameter id="state" label="State" menu="" required="false" tooltip="The value used to set the submission state."/>
        <parameter id="values" label="Values" menu="" required="false" tooltip="A JSON map of field names to values that should be set.">&lt;%=
{
  "Onsolve Last Activity Time" =&gt; @results['Extract Last Activity Time']['output']
}.to_json
%&gt;
</parameter>
        <parameter id="current_page_name" label="Current Page Name" menu="" required="false" tooltip="Set the current page name."/>
        <parameter id="current_page_navigation" label="Current Page Navigation" menu="" required="false" tooltip="Set the current page navigation."/>
        <parameter id="origin_id" label="Origin ID" menu="" required="false" tooltip="Set the origin ID."/>
        <parameter id="parent_id" label="Parent ID" menu="" required="false" tooltip="Set the parent ID."/>
    </parameters>
            <messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents>
                
            <task label="" type="Complete" value="">kinetic_request_ce_submission_activity_update_v1_33</task></dependents>
    </task>
      
        <task definition_id="utilities_echo_v1" id="utilities_echo_v1_26" name="Extract Last Activity Time" x="803" y="144">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="input" label="Input" menu="" required="true" tooltip="">&lt;%=
report_output = JSON.parse(@results['Get Integration Report Results']['Output'])
report_result = report_output['execute_custom_report_response']['report_detail']
headers = report_result['header']['column_name']
rows = []
rows = report_result['row'] if report_result['row'].is_a? (Array)
rows = [report_result['row']] if report_result['row'].is_a? (Hash)

display_line_index = headers.find_index('LASTACTIVITYTIME');
if !rows.empty?
  last_activity_time = rows[0]['value'][display_line_index]
else
  last_activity_time = @results['Re-Get Task Activity Monitoring Values']['Onsolve Last Activity Time']
end

last_activity_time
%&gt;</parameter>
    </parameters>
            <messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents>
                <task label="" type="Complete" value="">kinetic_request_ce_submission_update_v1_25</task>
            </dependents>
    </task>
      
        <task definition_id="kinetic_request_ce_submission_get_answers_v1" id="kinetic_request_ce_submission_get_answers_v1_27" name="Re-Get Task Activity Monitoring Values 2" x="652" y="357">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>false</visible>
      <parameters>
        <parameter id="error_handling" label="Error Handling" menu="Error Message,Raise Error" required="true" tooltip="Determine what to return if an error is encountered.">Raise Error</parameter>
        <parameter id="space_slug" label="Space Slug" menu="" required="false" tooltip="The Space the submission is being retrieved from."/>
        <parameter id="submission_id" label="Submission ID" menu="" required="true" tooltip="The id of the submission to retrieve answers for.">&lt;%=JSON.parse(@source['Data'])['Task Activity Monitor Submission']%&gt;</parameter>
    </parameters>
            <messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents>
                <task label="Not Closed" type="Complete" value="@results['Re-Get Task Activity Monitoring Values 2']['Onsolve Status'] != &quot;Closed&quot;">utilities_create_trigger_v1_1</task>
            <task label="Closed" type="Complete" value="@results['Re-Get Task Activity Monitoring Values 2']['Onsolve Status'] == &quot;Closed&quot;">system_junction_v1_24</task></dependents>
    </task>
      
        
      
        <task definition_id="routine_onsolve_mir3_get_integration_report_results" id="routine_onsolve_mir3_get_integration_report_results_29" name="Get Integration Report Results" x="286" y="231">
      <version>1</version>
      <configured>true</configured>
      <defers>true</defers>
      <deferrable>true</deferrable>
      <visible>false</visible>
      <parameters>
            <parameter id="UUID" label="UUID" menu="" required="true" tooltip="The UUID for the MIR3 Notification">&lt;%=@results['Get Task Activity Monitoring Values']['Onsolve Id']%&gt;</parameter>
            <parameter id="Timestamp" label="Timestamp" menu="" required="true" tooltip="The point after which to return contact attempts and responses from the report">&lt;%=
last_activity_time = @results['Get Task Activity Monitoring Record']['Created At']

if @results['Get Task Activity Monitoring Values'].has_key? ('Onsolve Last Activity Time')
  if !@results['Get Task Activity Monitoring Values']['Onsolve Last Activity Time'].nil?
    last_activity_time = @results['Get Task Activity Monitoring Values']['Onsolve Last Activity Time']
  end
end

Time.parse(last_activity_time).strftime("%Y-%m-%d %H:%M:%S")
%&gt;</parameter>
            <parameter id="Timezone" label="Timezone" menu="" required="true" tooltip="Timezone to be used for building display lines that include textual timestamps. Options are CST, EST, PST, UTC, or USER">&lt;%=
timezone = "UTC"

integration_config = JSON.parse(@source['Data'])['Integration Configuration']
std_params = JSON.parse(integration_config['Interim Standard Action Parameters'] || "{}")

if ["CST","EST","PST","UTC","USER"].include? (std_params['Timezone'])
  timezone = std_params['Timezone']
end

timezone
%&gt;</parameter>
            <parameter id="Responses Used" label="Responses Used" menu="" required="true" tooltip="0 = Do not included responses in results, 1 = Include responses">&lt;%=
responses_used = "1"

integration_config = JSON.parse(@source['Data'])['Integration Configuration']
std_params = JSON.parse(integration_config['Interim Standard Action Parameters'] || "{}")

if ["0","1"].include? (std_params['Responses Used'])
  responses_used = std_params['Responses Used']
end

responses_used
%&gt;</parameter>
            <parameter id="Success Responder Type" label="Success Responder Type" menu="" required="true" tooltip="0 = Not needed, 1 = First and Last Name, 2 = Employee ID,  3 = User Name, 4 = Primary Key">&lt;%=
success_responder = "2"

integration_config = JSON.parse(@source['Data'])['Integration Configuration']
std_params = JSON.parse(integration_config['Interim Standard Action Parameters'] || "{}")

if ["0","1","2","3","4"].include? (std_params['Success Responder Type'])
  success_responder = std_params['Success Responder Type']
end

success_responder
%&gt;</parameter>
            <parameter id="Primary Key Field" label="Primary Key Field" menu="" required="false" tooltip="Required only if using Success Responder Type = 4, otherwise not used">&lt;%=
integration_config = JSON.parse(@source['Data'])['Integration Configuration']
std_params = JSON.parse(integration_config['Interim Standard Action Parameters'] || "{}")

primary_key = std_params['Primary Key'] if !std_params['Primary Key'].nil?

primary_key
%&gt;</parameter>
            <parameter id="Detail Level" label="Detail Level" menu="" required="true" tooltip="1 = Contact attemptes, responses, and counts, 2 = Responses and counts, 3 = Only 'Success' responses and counts, 4 = Counts only">&lt;%=
detail_level = "1"

integration_config = JSON.parse(@source['Data'])['Integration Configuration']
std_params = JSON.parse(integration_config['Interim Standard Action Parameters'] || "{}")

if ["1","2","3","4"].include? (std_params['Detail Level'])
  detail_level = std_params['Detail Level']
end

detail_level
%&gt;</parameter>
            <parameter id="Report Name" label="Report Name" menu="" required="true" tooltip="">&lt;%=
report_name = "Integration Results"

integration_config = JSON.parse(@source['Data'])['Integration Configuration']
std_params = JSON.parse(integration_config['Interim Standard Action Parameters'] || "{}")

report_name = std_params['Report Name'] if !std_params['Report Name'].nil?

report_name
%&gt;</parameter>
        </parameters>
            <messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents>
                <task label="" type="Complete" value="">kinetic_request_ce_submission_get_answers_v1_21</task>
            <task type="Complete" label="Unsuccessful" value="@results['Get Integration Report Results']['Success'] != &quot;true&quot;">routine_onsolve_error_v1_44</task></dependents>
    </task>
      
        <task definition_id="kinetic_request_ce_submission_retrieve_v2" id="kinetic_request_ce_submission_retrieve_v2_30" name="Get Task Activity Monitoring Record" x="11" y="232">
      <version>2</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="error_handling" label="Error Handling" menu="Error Message,Raise Error" required="true" tooltip="Determine what to return if an error is encountered.">Raise Error</parameter>
        <parameter id="space_slug" label="Space Slug" menu="" required="false" tooltip="The Space the submission is being retrieved from (defaults to info value if not provided)."/>
        <parameter id="retrieve_by" label="Retrieve By" menu="Id,Query" required="true" tooltip="How to retrieve the submission. Id or Query.">Id</parameter>
        <!-- Retrieve By Query parameters -->
        <parameter dependsOnId="retrieve_by" dependsOnValue="Query" id="kapp_slug" label="Kapp Slug" menu="" required="true" tooltip="Slug of the kapp to query"/>
        <parameter dependsOnId="retrieve_by" dependsOnValue="Query" id="form_slug" label="Form Slug" menu="" required="true" tooltip="Slug of the form to query"/>
        <parameter dependsOnId="retrieve_by" dependsOnValue="Query" id="query" label="Query" menu="" required="true" tooltip="A query that will retrieve a single submission"/>
        <!-- Retrieve By Id parameters -->
        <parameter dependsOnId="retrieve_by" dependsOnValue="Id" id="submission_id" label="Submission Id" menu="" required="true" tooltip="The id of the submission being retrieved.">&lt;%=JSON.parse(@source['Data'])['Task Activity Monitor Submission']%&gt;</parameter>
    </parameters>
            <messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents>
                <task label="" type="Complete" value="">kinetic_request_ce_submission_get_answers_v1_5</task>
            </dependents>
    </task>
      
        <task definition_id="remedy_generic_create_v2" id="remedy_generic_create_v2_31" name="Add Remedy - WorkInfo" x="1287" y="144">
      <version>2</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>true</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="form" label="Form Name" menu="" required="true" tooltip="Form Name">&lt;%=
integration_config = JSON.parse( @source['Data'] )['Integration Configuration']
parameters = JSON.parse(integration_config['Initiation Standard Action Parameters'])
parameters["Work Log Form"]
%&gt;</parameter>
        <parameter id="field_values" label="Field Values" menu="" required="true" tooltip="JSON mapping of field values">&lt;%=
integration_config = JSON.parse( @source['Data'] )['Integration Configuration']
source_data = JSON.parse( @results['Re-Get Task Activity Monitoring Values']['Source Data'] )

{
  "Incident Entry ID" =&gt; source_data[integration_config['Field 1 Database Name']],
  "Secure Work Log" =&gt; "Yes",
  "View Access" =&gt; "Internal",
  "Communication Source" =&gt; "Web",
  "z1D Previous Operation" =&gt; "SET",
  "Status" =&gt; "Enabled",
  "Work Log Type" =&gt; "General Information",
  "Incident Number" =&gt; source_data[integration_config['Display Reference Field Database Name']],
  "Description" =&gt; "Alerting Interim Update",
  "Detailed Description" =&gt; @results['Assemble Work Note']['output'],
  "Work Log Date" =&gt; Time.now().iso8601
}.to_json
%&gt;</parameter>
    </parameters>
            <messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents/>
    </task>
      
        <task definition_id="kinetic_request_ce_submission_activity_create_v1" id="kinetic_request_ce_submission_activity_create_v1_32" name="Add Submission Activity" x="10" y="96">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>false</visible>
      <parameters>
        <parameter id="error_handling" label="Error Handling" menu="Error Message,Raise Error" required="true" tooltip="Determine what to return if an error is encountered.">Raise Error</parameter>
        <parameter id="space_slug" label="Space Slug" menu="" required="false" tooltip="The Space the submission exists in (defaults to info value if not provided)."/>
        <parameter id="submission_id" label="Submission Id" menu="" required="true" tooltip="The id of the submission for which the activity is being created for.">&lt;%=JSON.parse(@source['Data'])['Task Activity Monitor Submission']%&gt;</parameter>
        <parameter id="label" label="Label" menu="" required="false" tooltip="The label for the submission activity.">MIR3 Notification Update</parameter>
        <parameter id="description" label="Description" menu="" required="false" tooltip="The description of the submission activity.">Source Name: &lt;%=@source['Name']%&gt;
Source Group: &lt;%=@source['Group']%&gt;
Source Id: &lt;%=@source['Id']%&gt;
Run Id: &lt;%=@run['Id']%&gt;</parameter>
        <parameter id="type" label="Type" menu="" required="false" tooltip="Specifies the a submission activity 'Type', which should indicate what type of data is included.">Notification Update</parameter>
        <parameter id="data" label="Data" menu="" required="false" tooltip="Additional data that can be used by resources consuming the submission activity record (for example a Request bundle may render submission details based upon JSON content in the activity data).">&lt;%=
{
  "Task Run Id" =&gt; @run['Id'],
  "Status" =&gt; "In Process"
}.to_json
%&gt;</parameter>
    </parameters>
            <messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents><task label="" type="Complete" value="">kinetic_request_ce_submission_retrieve_v2_30</task></dependents>
    </task>
      
        <task definition_id="kinetic_request_ce_submission_activity_update_v1" id="kinetic_request_ce_submission_activity_update_v1_33" name="Update Submission Activity - Not Closed" x="1133" y="133">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>false</visible>
      <parameters>
        <parameter id="error_handling" label="Error Handling" menu="Error Message,Raise Error" required="true" tooltip="Determine what to return if an error is encountered.">Raise Error</parameter>
        <parameter id="space_slug" label="Space Slug" menu="" required="false" tooltip="The Space the submission exists in (defaults to info value if not provided)."/>
        <parameter id="submission_id" label="Submission Id" menu="" required="true" tooltip="The id of the submission for which the activity is being created for.">&lt;%=JSON.parse(@source['Data'])['Task Activity Monitor Submission']%&gt;</parameter>
        <parameter id="submission_activity_id" label="Submission Activity Id" menu="" required="true" tooltip="The id of the submission for which the activity is being created for.">&lt;%=@results['Add Submission Activity']['Id']%&gt;</parameter>
        <parameter id="label" label="Label" menu="" required="false" tooltip="The label for the submission activity.">MIR3 Notification Update</parameter>
        <parameter id="description" label="Description" menu="" required="false" tooltip="The description of the submission activity.">Source Name: &lt;%=@source['Name']%&gt;
Source Group: &lt;%=@source['Group']%&gt;
Source Id: &lt;%=@source['Id']%&gt;
Run Id: &lt;%=@run['Id']%&gt;</parameter>
        <parameter id="type" label="Type" menu="" required="false" tooltip="Specifies the a submission activity 'Type', which should indicate what type of data is included.">Notification Update</parameter>
        <parameter id="data" label="Data" menu="" required="false" tooltip="Additional data that can be used by resources consuming the submission activity record (for example a Request bundle may render submission details based upon JSON content in the activity data).">&lt;%=
{
  "Task Run Id" =&gt; @run['Id'],
  "Status" =&gt; "Completed",
  "Comments" =&gt; "Interim Update Processed: #{@results['Assemble Work Note']['output']}"
}.to_json
%&gt;</parameter>
    </parameters><messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents><task type="Complete" label="" value="">remedy_generic_create_v2_31</task></dependents>
    </task>
      
        <task definition_id="kinetic_request_ce_submission_activity_update_v1" id="kinetic_request_ce_submission_activity_update_v1_34" name="Update Submission Activity - Closed" x="440" y="384">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>false</visible>
      <parameters>
        <parameter id="error_handling" label="Error Handling" menu="Error Message,Raise Error" required="true" tooltip="Determine what to return if an error is encountered.">Raise Error</parameter>
        <parameter id="space_slug" label="Space Slug" menu="" required="false" tooltip="The Space the submission exists in (defaults to info value if not provided)."/>
        <parameter id="submission_id" label="Submission Id" menu="" required="true" tooltip="The id of the submission for which the activity is being created for.">&lt;%=JSON.parse(@source['Data'])['Task Activity Monitor Submission']%&gt;</parameter>
        <parameter id="submission_activity_id" label="Submission Activity Id" menu="" required="true" tooltip="The id of the submission for which the activity is being created for.">&lt;%=@results['Add Submission Activity']['Id']%&gt;</parameter>
        <parameter id="label" label="Label" menu="" required="false" tooltip="The label for the submission activity.">MIR3 Notification Update</parameter>
        <parameter id="description" label="Description" menu="" required="false" tooltip="The description of the submission activity.">Source Name: &lt;%=@source['Name']%&gt;
Source Group: &lt;%=@source['Group']%&gt;
Source Id: &lt;%=@source['Id']%&gt;
Run Id: &lt;%=@run['Id']%&gt;</parameter>
        <parameter id="type" label="Type" menu="" required="false" tooltip="Specifies the a submission activity 'Type', which should indicate what type of data is included.">Notification Update</parameter>
        <parameter id="data" label="Data" menu="" required="false" tooltip="Additional data that can be used by resources consuming the submission activity record (for example a Request bundle may render submission details based upon JSON content in the activity data).">&lt;%=
{
  "Task Run Id" =&gt; @run['Id'],
  "Status" =&gt; "Completed",
  "Comments" =&gt; "Item closed, no interim update processed."
}.to_json
%&gt;</parameter>
    </parameters><messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents><task label="" type="Complete" value="">system_junction_v1_24</task></dependents>
    </task>
      
        <task definition_id="system_junction_v1" id="system_junction_v1_35" name="Junction: End" x="647" y="660">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>false</visible>
      <parameters/><messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents><task label="" type="Complete" value="">system_noop_v1_18</task></dependents>
    </task>
      
        <task definition_id="system_noop_v1" id="system_noop_v1_36" name="No op" x="451" y="99">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>false</visible>
      <parameters/><messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents><task label="Successful" type="Complete" value="@results['Get Integration Report Results']['Success'] == &quot;true&quot;">utilities_echo_v1_14</task><task label="Unsuccessful" type="Complete" value="@results['Get Integration Report Results']['Success'] != &quot;true&quot;">utilities_echo_v1_37</task></dependents>
    </task>
      
        <task definition_id="utilities_echo_v1" id="utilities_echo_v1_37" name="Assemble Work Note - Error" x="649" y="14">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="input" label="Input" menu="" required="true" tooltip="">&lt;%=
report_results = JSON.parse(@results['Get Integration Report Results']['Output'])['Full Output JSON']

work_note_text = "Kinetic was unable to retrieve an interim update from MIR3, but will try again at the next interval.\nError message (if applicable): #{report_results['message']}"

work_note_text
%&gt;
</parameter>
    </parameters>
            <messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents><task type="Complete" label="" value="">kinetic_request_ce_submission_activity_update_v1_39</task></dependents>
    </task>
      
        <task definition_id="remedy_generic_create_v2" id="remedy_generic_create_v2_38" name="Add Remedy - WorkInfo - Error" x="1287" y="12">
      <version>2</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>true</deferrable>
      <visible>true</visible>
      <parameters>
        <parameter id="form" label="Form Name" menu="" required="true" tooltip="Form Name">&lt;%=
integration_config = JSON.parse( @source['Data'] )['Integration Configuration']
parameters = JSON.parse(integration_config['Initiation Standard Action Parameters'])
parameters["Work Log Form"]
%&gt;</parameter>
        <parameter id="field_values" label="Field Values" menu="" required="true" tooltip="JSON mapping of field values">&lt;%=
integration_config = JSON.parse( @source['Data'] )['Integration Configuration']
source_data = JSON.parse( @results['Re-Get Task Activity Monitoring Values']['Source Data'] )

{
  "Incident Entry ID" =&gt; source_data[integration_config['Field 1 Database Name']],
  "Secure Work Log" =&gt; "Yes",
  "View Access" =&gt; "Internal",
  "Communication Source" =&gt; "Web",
  "z1D Previous Operation" =&gt; "SET",
  "Status" =&gt; "Enabled",
  "Work Log Type" =&gt; "General Information",
  "Incident Number" =&gt; source_data[integration_config['Display Reference Field Database Name']],
  "Description" =&gt; "Alerting Interim Update",
  "Detailed Description" =&gt; @results['Assemble Work Note - Error']['output'],
  "Work Log Date" =&gt; Time.now().iso8601
}.to_json
%&gt;</parameter>
    </parameters>
            <messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents/>
    </task>
      
        <task definition_id="kinetic_request_ce_submission_activity_update_v1" id="kinetic_request_ce_submission_activity_update_v1_39" name="Update Submission Activity - Not Closed - Error" x="1134" y="12">
      <version>1</version>
      <configured>true</configured>
      <defers>false</defers>
      <deferrable>false</deferrable>
      <visible>false</visible>
      <parameters>
        <parameter id="error_handling" label="Error Handling" menu="Error Message,Raise Error" required="true" tooltip="Determine what to return if an error is encountered.">Raise Error</parameter>
        <parameter id="space_slug" label="Space Slug" menu="" required="false" tooltip="The Space the submission exists in (defaults to info value if not provided)."/>
        <parameter id="submission_id" label="Submission Id" menu="" required="true" tooltip="The id of the submission for which the activity is being created for.">&lt;%=JSON.parse(@source['Data'])['Task Activity Monitor Submission']%&gt;</parameter>
        <parameter id="submission_activity_id" label="Submission Activity Id" menu="" required="true" tooltip="The id of the submission for which the activity is being created for.">&lt;%=@results['Add Submission Activity']['Id']%&gt;</parameter>
        <parameter id="label" label="Label" menu="" required="false" tooltip="The label for the submission activity.">MIR3 Notification Update</parameter>
        <parameter id="description" label="Description" menu="" required="false" tooltip="The description of the submission activity.">Source Name: &lt;%=@source['Name']%&gt;
Source Group: &lt;%=@source['Group']%&gt;
Source Id: &lt;%=@source['Id']%&gt;
Run Id: &lt;%=@run['Id']%&gt;</parameter>
        <parameter id="type" label="Type" menu="" required="false" tooltip="Specifies the a submission activity 'Type', which should indicate what type of data is included.">Notification Update</parameter>
        <parameter id="data" label="Data" menu="" required="false" tooltip="Additional data that can be used by resources consuming the submission activity record (for example a Request bundle may render submission details based upon JSON content in the activity data).">&lt;%=
{
  "Task Run Id" =&gt; @run['Id'],
  "Status" =&gt; "Completed",
  "Comments" =&gt; "Interim Update Processed: #{@results['Assemble Work Note - Error']['output']}"
}.to_json
%&gt;</parameter>
    </parameters><messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents><task type="Complete" label="" value="">remedy_generic_create_v2_38</task></dependents>
    </task>
      
        
      
        
      
        
      
        
      
        <task name="OnSolve Error Notification" id="routine_onsolve_error_v1_44" definition_id="routine_onsolve_error_v1" x="285" y="390">
      <version>1</version>
      <configured>true</configured>
      <defers>true</defers>
      <deferrable>true</deferrable>
      <visible>false</visible>
      <parameters>
            <parameter id="Error Message Title" label="Error Message Title" required="true" tooltip="The title of the error message to be send with the error notification" menu="">&lt;%=
uuid = @results['Get Task Activity Monitoring Values']['Onsolve Id']
client_reference = @results['Get Task Activity Monitoring Values']['Source Reference Id']

"Unable to retrieve interim update from MIR3 for #{client_reference} (UUID: #{uuid})"
%&gt;</parameter>
            <parameter id="Error Message Details" label="Error Message Details" required="true" tooltip="The error message details to be sent with the error notification" menu="">&lt;%=
report_results = JSON.parse(@results['Get Integration Report Results']['Output'])['Full Output JSON']
report_results['message']
%&gt;</parameter>
            <parameter id="Integration Id" label="Integration Id" required="false" tooltip="The Submission Id of the integration configuration record" menu=""/>
            <parameter id="Submission Id" label="Submission Id" required="false" tooltip="The Submission Id of the Task Activity Monitor record" menu="">&lt;%=JSON.parse(@source['Data'])['Task Activity Monitor Submission']%&gt;</parameter>
            <parameter id="Recipient List" label="Recipient List" required="false" tooltip="The receipient list to receive the notification" menu="">&lt;%=JSON.parse(@source['Data'])['Integration Configuration']['Error Notification Email']%&gt;</parameter>
            <parameter id="Task Run" label="Task Run" required="false" tooltip="" menu="">&lt;%=@run['Id']%&gt;</parameter>
            <parameter id="Additional Info" label="Additional Info" required="false" tooltip="" menu=""/>
        </parameters><messages>
        <message type="Create"/>
        <message type="Update"/>
        <message type="Complete"/>
      </messages>
      <dependents/>
    </task>
      </request>
</taskTree></tree>