{
  "attributes": [
    {
      "name": "Integration Config",
      "values": [
        "True"
      ]
    }
  ],
  "bridgedResources": [
    {
      "model": "Datastore - Robot Executions",
      "name": "Last Robot Execution",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Recurrence Submission Id')}",
          "name": "Id"
        }
      ],
      "qualification": "Last Execution by By Id",
      "status": "Active"
    },
    {
      "model": "Datastore - Robot Next Execution",
      "name": "Next Robot Execution",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Recurrence Submission Id')}",
          "name": "Id"
        }
      ],
      "qualification": "By Id",
      "status": "Active"
    },
    {
      "model": "Datastore - Onsolve Notifications",
      "name": "Onsolve Notification by Name",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Notification Message Template')}",
          "name": "Notification Name"
        }
      ],
      "qualification": "By Name",
      "status": "Active"
    },
    {
      "model": "Datastore - Onsolve Notification Placeholders",
      "name": "Onsolve Notification Placeholders",
      "order": [
        {
          "attribute": "Placeholder Name",
          "direction": "asc"
        }
      ],
      "parameters": [
        {
          "mapping": "${values('Notification Message Template')}",
          "name": "Notification Name"
        }
      ],
      "qualification": "By Notification Name",
      "status": "Active"
    },
    {
      "model": "Datastore - Onsolve Notifications",
      "name": "Onsolve Notifications",
      "order": [
        {
          "attribute": "Notification Name",
          "direction": "asc"
        }
      ],
      "parameters": [

      ],
      "qualification": "All",
      "status": "Active"
    },
    {
      "model": "Datastore - Robots",
      "name": "Robot by Id",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Recurrence Submission Id')}",
          "name": "Robot Id"
        }
      ],
      "qualification": "By Id",
      "status": "Active"
    }
  ],
  "customHeadContent": "<style>\n  /*\n  .bg-primary {\n    background-color: #0c8795 !important;\n  }\n  .bg-warning {\n    background-color: #ffff59 !important;\n  }\n  */\n  section {\n    margin-top: 20px;\n  }\n  section.card-body {\n    margin-top: 0px;\n  }\n  section.card-body .form-group {\n    margin-bottom: .5rem;\n  }\n  div.card-header > div.h5, div.card-header > div.h6 {\n    margin-bottom: 0px;\n  }\n\n  .modal-dialog .modal-content .modal-body, .modal-dialog .modal-content .modal-header, .modal-dialog .modal-content .modal-footer{\n    padding:1rem;\n  }\n  \n  .configured-level{\n    font-weight: bold;\n  }\n</style>\n\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js\" integrity=\"sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q\" crossorigin=\"anonymous\"></script>\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\" integrity=\"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl\" crossorigin=\"anonymous\"></script>",
  "description": "The form used to define the configuration for Cherwell Integrations",
  "indexDefinitions": [
    {
      "name": "createdAt",
      "parts": [
        "createdAt"
      ],
      "unique": false
    },
    {
      "name": "createdBy",
      "parts": [
        "createdBy"
      ],
      "unique": false
    },
    {
      "name": "handle",
      "parts": [
        "handle"
      ],
      "unique": false
    },
    {
      "name": "submittedAt",
      "parts": [
        "submittedAt"
      ],
      "unique": false
    },
    {
      "name": "submittedBy",
      "parts": [
        "submittedBy"
      ],
      "unique": false
    },
    {
      "name": "updatedAt",
      "parts": [
        "updatedAt"
      ],
      "unique": false
    },
    {
      "name": "updatedBy",
      "parts": [
        "updatedBy"
      ],
      "unique": false
    },
    {
      "name": "values[Assign Responder]",
      "parts": [
        "values[Assign Responder]"
      ],
      "unique": false
    },
    {
      "name": "values[Description]",
      "parts": [
        "values[Description]"
      ],
      "unique": false
    },
    {
      "name": "values[Error Notification Email]",
      "parts": [
        "values[Error Notification Email]"
      ],
      "unique": false
    },
    {
      "name": "values[Escalation Level]",
      "parts": [
        "values[Escalation Level]"
      ],
      "unique": false
    },
    {
      "name": "values[External Unique Key Field Name]",
      "parts": [
        "values[External Unique Key Field Name]"
      ],
      "unique": false
    },
    {
      "name": "values[Fields to Update Upon Notification]",
      "parts": [
        "values[Fields to Update Upon Notification]"
      ],
      "unique": false
    },
    {
      "name": "values[Groups]",
      "parts": [
        "values[Groups]"
      ],
      "unique": false
    },
    {
      "name": "values[Individuals]",
      "parts": [
        "values[Individuals]"
      ],
      "unique": false
    },
    {
      "name": "values[Initiation Custom Action Parameters]",
      "parts": [
        "values[Initiation Custom Action Parameters]"
      ],
      "unique": false
    },
    {
      "name": "values[Initiation Custom Action Task Tree]",
      "parts": [
        "values[Initiation Custom Action Task Tree]"
      ],
      "unique": false
    },
    {
      "name": "values[Initiation Standard Action Parameters]",
      "parts": [
        "values[Initiation Standard Action Parameters]"
      ],
      "unique": false
    },
    {
      "name": "values[Initiation Standard Action Task Tree]",
      "parts": [
        "values[Initiation Standard Action Task Tree]"
      ],
      "unique": false
    },
    {
      "name": "values[Interim Custom Action Parameters]",
      "parts": [
        "values[Interim Custom Action Parameters]"
      ],
      "unique": false
    },
    {
      "name": "values[Interim Custom Action Task Tree]",
      "parts": [
        "values[Interim Custom Action Task Tree]"
      ],
      "unique": false
    },
    {
      "name": "values[Interim Standard Action Parameters]",
      "parts": [
        "values[Interim Standard Action Parameters]"
      ],
      "unique": false
    },
    {
      "name": "values[Interim Standard Action Task Tree]",
      "parts": [
        "values[Interim Standard Action Task Tree]"
      ],
      "unique": false
    },
    {
      "name": "values[Interim Update Action]",
      "parts": [
        "values[Interim Update Action]"
      ],
      "unique": false
    },
    {
      "name": "values[Interim Update Interval]",
      "parts": [
        "values[Interim Update Interval]"
      ],
      "unique": false
    },
    {
      "name": "values[Internal Unique Key Field Name]",
      "parts": [
        "values[Internal Unique Key Field Name]"
      ],
      "unique": false
    },
    {
      "name": "values[Keep Task History]",
      "parts": [
        "values[Keep Task History]"
      ],
      "unique": false
    },
    {
      "name": "values[MIR3 Unique User Match Field]",
      "parts": [
        "values[MIR3 Unique User Match Field]"
      ],
      "unique": false
    },
    {
      "name": "values[Max Response Time]",
      "parts": [
        "values[Max Response Time]"
      ],
      "unique": false
    },
    {
      "name": "values[Name]:UNIQUE",
      "parts": [
        "values[Name]"
      ],
      "unique": true
    },
    {
      "name": "values[Notification Initiation Action]",
      "parts": [
        "values[Notification Initiation Action]"
      ],
      "unique": false
    },
    {
      "name": "values[Notification Message Template]",
      "parts": [
        "values[Notification Message Template]"
      ],
      "unique": false
    },
    {
      "name": "values[Notification Method]",
      "parts": [
        "values[Notification Method]"
      ],
      "unique": false
    },
    {
      "name": "values[Notification Result Action]",
      "parts": [
        "values[Notification Result Action]"
      ],
      "unique": false
    },
    {
      "name": "values[Notify more than once per record]",
      "parts": [
        "values[Notify more than once per record]"
      ],
      "unique": false
    },
    {
      "name": "values[Placeholder Data]",
      "parts": [
        "values[Placeholder Data]"
      ],
      "unique": false
    },
    {
      "name": "values[Polling]",
      "parts": [
        "values[Polling]"
      ],
      "unique": false
    },
    {
      "name": "values[Qualification]",
      "parts": [
        "values[Qualification]"
      ],
      "unique": false
    },
    {
      "name": "values[Recipients JSON]",
      "parts": [
        "values[Recipients JSON]"
      ],
      "unique": false
    },
    {
      "name": "values[Recurrence Description]",
      "parts": [
        "values[Recurrence Description]"
      ],
      "unique": false
    },
    {
      "name": "values[Recurrence Status]",
      "parts": [
        "values[Recurrence Status]"
      ],
      "unique": false
    },
    {
      "name": "values[Recurrence Submission Id]",
      "parts": [
        "values[Recurrence Submission Id]"
      ],
      "unique": false
    },
    {
      "name": "values[Restart Notification Criteria]",
      "parts": [
        "values[Restart Notification Criteria]"
      ],
      "unique": false
    },
    {
      "name": "values[Result Custom Action Parameters]",
      "parts": [
        "values[Result Custom Action Parameters]"
      ],
      "unique": false
    },
    {
      "name": "values[Result Custom Action Task Tree]",
      "parts": [
        "values[Result Custom Action Task Tree]"
      ],
      "unique": false
    },
    {
      "name": "values[Result Standard Action Parameters]",
      "parts": [
        "values[Result Standard Action Parameters]"
      ],
      "unique": false
    },
    {
      "name": "values[Result Standard Action Task Tree]",
      "parts": [
        "values[Result Standard Action Task Tree]"
      ],
      "unique": false
    },
    {
      "name": "values[Schedules]",
      "parts": [
        "values[Schedules]"
      ],
      "unique": false
    },
    {
      "name": "values[Schema Name]",
      "parts": [
        "values[Schema Name]"
      ],
      "unique": false
    },
    {
      "name": "values[Schema Type Id]",
      "parts": [
        "values[Schema Type Id]"
      ],
      "unique": false
    },
    {
      "name": "values[Status]",
      "parts": [
        "values[Status]"
      ],
      "unique": false
    },
    {
      "name": "values[Stop Notification Criteria]",
      "parts": [
        "values[Stop Notification Criteria]"
      ],
      "unique": false
    },
    {
      "name": "values[Task History Duration]",
      "parts": [
        "values[Task History Duration]"
      ],
      "unique": false
    },
    {
      "name": "values[User Field Containing Match to OnSolve Users]",
      "parts": [
        "values[User Field Containing Match to OnSolve Users]"
      ],
      "unique": false
    }
  ],
  "name": "Cherwell",
  "notes": null,
  "pages": [
    {
      "advanceCondition": null,
      "displayCondition": null,
      "displayPage": null,
      "elements": [
        {
          "type": "section",
          "renderType": null,
          "name": "General Info Container",
          "title": null,
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
            "class": "card"
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "General Info Container Header",
              "text": "<div class=\"h5\">General Info</div>",
              "visible": true,
              "renderAttributes": {
                "class": "card-header bg-primary text-white"
              }
            },
            {
              "type": "section",
              "renderType": null,
              "name": "General Info Container Body",
              "title": null,
              "visible": true,
              "omitWhenHidden": null,
              "renderAttributes": {
                "class": "card-body"
              },
              "elements": [
                {
                  "type": "field",
                  "name": "Status",
                  "label": "Status",
                  "key": "f1",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": true,
                  "enabled": true,
                  "required": true,
                  "requiredMessage": null,
                  "omitWhenHidden": null,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "radio",
                  "choicesResourceName": null,
                  "choicesRunIf": null,
                  "choices": [
                    {
                      "label": "Active",
                      "value": "Active"
                    },
                    {
                      "label": "Inactive",
                      "value": "Inactive"
                    }
                  ]
                },
                {
                  "type": "field",
                  "name": "Name",
                  "label": "Name",
                  "key": "f2",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": true,
                  "enabled": true,
                  "required": true,
                  "requiredMessage": null,
                  "omitWhenHidden": null,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 1
                },
                {
                  "type": "field",
                  "name": "Description",
                  "label": "Description",
                  "key": "f3",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": true,
                  "enabled": true,
                  "required": false,
                  "requiredMessage": null,
                  "omitWhenHidden": null,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 2
                },
                {
                  "type": "field",
                  "name": "Keep Task History",
                  "label": "Keep Task History",
                  "key": "f5",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": true,
                  "enabled": true,
                  "required": "values('Polling') === \"yes\"",
                  "requiredMessage": null,
                  "omitWhenHidden": null,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "radio",
                  "choicesResourceName": null,
                  "choicesRunIf": null,
                  "choices": [
                    {
                      "label": "Forever",
                      "value": "Forever"
                    },
                    {
                      "label": "Not Forever",
                      "value": "Not Forever"
                    }
                  ]
                },
                {
                  "type": "field",
                  "name": "Task History Duration",
                  "label": "Task History Duration (days)",
                  "key": "f6",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": "values('Keep Task History') === \"Not Forever\"",
                  "enabled": true,
                  "required": "values('Keep Task History') === \"Not Forever\"",
                  "requiredMessage": null,
                  "omitWhenHidden": true,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 1
                },
                {
                  "type": "field",
                  "name": "Error Notification Email",
                  "label": "Error Notification Email (comma separated list of SMTP addresses)",
                  "key": "f46",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": true,
                  "enabled": true,
                  "required": false,
                  "requiredMessage": null,
                  "omitWhenHidden": null,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 1
                }
              ]
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Integration Source Container",
          "title": null,
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
            "class": "card"
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Integration Source Container Header",
              "text": "<div class=\"h5\">Integration Source Details</div>",
              "visible": true,
              "renderAttributes": {
                "class": "card-header bg-primary text-white"
              }
            },
            {
              "type": "section",
              "renderType": null,
              "name": "Integration Source Container Body",
              "title": null,
              "visible": true,
              "omitWhenHidden": null,
              "renderAttributes": {
                "class": "card-body"
              },
              "elements": [
                {
                  "type": "field",
                  "name": "Schema Name",
                  "label": "Business Object Type",
                  "key": "f7",
                  "defaultValue": "Incident",
                  "defaultResourceName": null,
                  "visible": true,
                  "enabled": true,
                  "required": "values('Polling') === \"Yes\"",
                  "requiredMessage": null,
                  "omitWhenHidden": null,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [
                    {
                      "name": "Set Schema Id if Incident",
                      "type": "Change",
                      "action": "Set Fields",
                      "mappings": [
                        {
                          "field": "Schema Type Id",
                          "value": "6dd53665c0c24cab86870a21cf6434ae",
                          "visible": null
                        }
                      ],
                      "runIf": "values('Schema Name') !== null && values('Schema Name').toLowerCase() == \"incident\""
                    },
                    {
                      "name": "Clear Schema Id if not Incident",
                      "type": "Change",
                      "action": "Set Fields",
                      "mappings": [
                        {
                          "field": "Schema Type Id",
                          "value": "${null}",
                          "visible": null
                        }
                      ],
                      "runIf": "values('Schema Name') === null || values('Schema Name').toLowerCase() !== \"incident\""
                    }
                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 1
                },
                {
                  "type": "field",
                  "name": "Schema Type Id",
                  "label": "Business Object Type Id",
                  "key": "f50",
                  "defaultValue": "6dd53665c0c24cab86870a21cf6434ae",
                  "defaultResourceName": null,
                  "visible": true,
                  "enabled": true,
                  "required": false,
                  "requiredMessage": null,
                  "omitWhenHidden": null,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 1
                },
                {
                  "type": "field",
                  "name": "Notify more than once per record",
                  "label": "Notify more than once per Form/Schema record?",
                  "key": "f43",
                  "defaultValue": "Yes",
                  "defaultResourceName": null,
                  "visible": true,
                  "enabled": true,
                  "required": true,
                  "requiredMessage": null,
                  "omitWhenHidden": null,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "radio",
                  "choicesResourceName": null,
                  "choicesRunIf": null,
                  "choices": [
                    {
                      "label": "No",
                      "value": "No"
                    },
                    {
                      "label": "Yes",
                      "value": "Yes"
                    }
                  ]
                },
                {
                  "type": "field",
                  "name": "Internal Unique Key Field Name",
                  "label": "Internal Unique Key Field Name (holding the RecID value)",
                  "key": "f52",
                  "defaultValue": "busObRecId",
                  "defaultResourceName": null,
                  "visible": true,
                  "enabled": true,
                  "required": true,
                  "requiredMessage": null,
                  "omitWhenHidden": null,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 1
                },
                {
                  "type": "field",
                  "name": "External Unique Key Field Name",
                  "label": "Form/Schema External Unique Key Field Name",
                  "key": "f40",
                  "defaultValue": "busObPublicId",
                  "defaultResourceName": null,
                  "visible": true,
                  "enabled": true,
                  "required": true,
                  "requiredMessage": null,
                  "omitWhenHidden": null,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 1
                },
                {
                  "type": "field",
                  "name": "User Field Containing Match to OnSolve Users",
                  "label": "User Field Containing Match to OnSolve Users",
                  "key": "f41",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": true,
                  "enabled": true,
                  "required": true,
                  "requiredMessage": null,
                  "omitWhenHidden": null,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 1
                },
                {
                  "type": "content",
                  "renderType": "html",
                  "name": "Unique Individual Identifier Field Note",
                  "text": "<small>What field from <strong>sys_user</strong> table is used to uniquely identify an individual user?<small>",
                  "visible": true,
                  "renderAttributes": {
                    "class": "margin-top:-10px;"
                  }
                },
                {
                  "type": "field",
                  "name": "MIR3 Unique User Match Field",
                  "label": "MIR3 Unique User Match Field",
                  "key": "f47",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": true,
                  "enabled": true,
                  "required": true,
                  "requiredMessage": null,
                  "omitWhenHidden": null,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "dropdown",
                  "choicesResourceName": null,
                  "choicesRunIf": null,
                  "choices": [
                    {
                      "label": "username",
                      "value": "username"
                    },
                    {
                      "label": "employeeId",
                      "value": "employeeId"
                    },
                    {
                      "label": "userUUID",
                      "value": "userUUID"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Polling Details Container",
          "title": "",
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
            "class": "card"
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Polling Details Container Header",
              "text": "<div class=\"h5\">Polling Details</div>",
              "visible": true,
              "renderAttributes": {
                "class": "card-header bg-primary text-white"
              }
            },
            {
              "type": "section",
              "renderType": null,
              "name": "Polling Details Container Body",
              "title": null,
              "visible": true,
              "omitWhenHidden": null,
              "renderAttributes": {
                "class": "card-body"
              },
              "elements": [
                {
                  "type": "field",
                  "name": "Polling",
                  "label": "Polling",
                  "key": "f4",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": true,
                  "enabled": true,
                  "required": true,
                  "requiredMessage": null,
                  "omitWhenHidden": null,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "radio",
                  "choicesResourceName": null,
                  "choicesRunIf": null,
                  "choices": [
                    {
                      "label": "Yes",
                      "value": "Yes"
                    },
                    {
                      "label": "No",
                      "value": "No"
                    }
                  ]
                },
                {
                  "type": "section",
                  "renderType": null,
                  "name": "Polling Info",
                  "title": "",
                  "visible": "values('Polling') === \"Yes\"",
                  "omitWhenHidden": false,
                  "renderAttributes": {
                  },
                  "elements": [
                    {
                      "type": "field",
                      "name": "Qualification",
                      "label": "Qualification",
                      "key": "f8",
                      "defaultValue": null,
                      "defaultResourceName": null,
                      "visible": true,
                      "enabled": true,
                      "required": "values('Polling') === \"Yes\"",
                      "requiredMessage": null,
                      "omitWhenHidden": null,
                      "pattern": null,
                      "constraints": [

                      ],
                      "events": [

                      ],
                      "renderAttributes": {
                      },
                      "dataType": "string",
                      "renderType": "text",
                      "rows": 2
                    },
                    {
                      "type": "content",
                      "renderType": "html",
                      "name": "Qualification Note",
                      "text": "<small>Limitation of the Cherwell API system prevent using date/times as search criteria (i.e., you cannot do \"between\" operators, or \"greather than or equal to\" AND \"less than\" comparison for the same field in the same filter/qualification; nor can you do \"does not equal\" operations).  Therefore filters/qualifications are limited to equality comparisons, and best suited for using a checkbox or other \"true/false\" flag within Cherwell.</small>",
                      "visible": true,
                      "renderAttributes": {
                        "style": "margin-top:-10px"
                      }
                    },
                    {
                      "type": "field",
                      "name": "Fields to Update Upon Notification",
                      "label": "Field(s) to Update Upon Notification (JSON structure)",
                      "key": "f51",
                      "defaultValue": null,
                      "defaultResourceName": null,
                      "visible": true,
                      "enabled": true,
                      "required": false,
                      "requiredMessage": null,
                      "omitWhenHidden": null,
                      "pattern": null,
                      "constraints": [

                      ],
                      "events": [

                      ],
                      "renderAttributes": {
                      },
                      "dataType": "string",
                      "renderType": "text",
                      "rows": 1
                    },
                    {
                      "type": "field",
                      "name": "Stop Notification Criteria",
                      "label": "Stop Notification Criteria",
                      "key": "f33",
                      "defaultValue": null,
                      "defaultResourceName": null,
                      "visible": false,
                      "enabled": true,
                      "required": false,
                      "requiredMessage": null,
                      "omitWhenHidden": true,
                      "pattern": null,
                      "constraints": [

                      ],
                      "events": [

                      ],
                      "renderAttributes": {
                      },
                      "dataType": "string",
                      "renderType": "text",
                      "rows": 1
                    },
                    {
                      "type": "field",
                      "name": "Restart Notification Criteria",
                      "label": "Restart Notification Criteria",
                      "key": "f34",
                      "defaultValue": null,
                      "defaultResourceName": null,
                      "visible": false,
                      "enabled": true,
                      "required": false,
                      "requiredMessage": null,
                      "omitWhenHidden": true,
                      "pattern": null,
                      "constraints": [

                      ],
                      "events": [

                      ],
                      "renderAttributes": {
                      },
                      "dataType": "string",
                      "renderType": "text",
                      "rows": 1
                    }
                  ]
                },
                {
                  "type": "section",
                  "renderType": null,
                  "name": "Recurrence Details Container",
                  "title": null,
                  "visible": "values('Polling') === \"Yes\"",
                  "omitWhenHidden": false,
                  "renderAttributes": {
                    "class": "card"
                  },
                  "elements": [
                    {
                      "type": "content",
                      "renderType": "html",
                      "name": "Recurrence Details Container Header",
                      "text": "<div class=\"h5\">Recurrence Details</div>",
                      "visible": true,
                      "renderAttributes": {
                        "class": "card-header bg-warning"
                      }
                    },
                    {
                      "type": "section",
                      "renderType": null,
                      "name": "Recurrence Details Container Body",
                      "title": "",
                      "visible": "values('Polling') === \"Yes\"",
                      "omitWhenHidden": false,
                      "renderAttributes": {
                        "class": "card-body"
                      },
                      "elements": [
                        {
                          "type": "field",
                          "name": "Recurrence Submission Id",
                          "label": "Recurrence Submission Id",
                          "key": "f14",
                          "defaultValue": null,
                          "defaultResourceName": null,
                          "visible": false,
                          "enabled": false,
                          "required": "values('Polling') === \"Yes\"",
                          "requiredMessage": "Recurrence Data is required.",
                          "omitWhenHidden": false,
                          "pattern": null,
                          "constraints": [

                          ],
                          "events": [

                          ],
                          "renderAttributes": {
                          },
                          "dataType": "string",
                          "renderType": "text",
                          "rows": 1
                        },
                        {
                          "type": "content",
                          "renderType": "html",
                          "name": "Recurrence Display",
                          "text": "<h4>Robot Display Here</h4>\n<em>Recurrence Description should be populated when the Robot form is updated</em>",
                          "visible": false,
                          "renderAttributes": {
                          }
                        },
                        {
                          "type": "content",
                          "renderType": "html",
                          "name": "Recurrence Modal",
                          "text": "<div class=\"modal fade\" id=\"recurrenceModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"recurrenceLabel\">\n  <div class=\"modal-dialog modal-xl\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"recurrenceLabel\"></h4>\n        <button type=\"button\" class=\"close btn btn-link\" data-dismiss=\"modal\" aria-label=\"Close\">Cancel</button>\n      </div>\n      <div class=\"modal-body\">\n        <i class=\"fa fa-cog fa-spin\"></i>\n      </div>\n      <!--div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Cancel</button>\n      </div-->\n    </div>\n  </div>\n</div>\n",
                          "visible": true,
                          "renderAttributes": {
                          }
                        },
                        {
                          "type": "field",
                          "name": "Recurrence Status",
                          "label": "Recurrence Status",
                          "key": "f15",
                          "defaultValue": null,
                          "defaultResourceName": null,
                          "visible": true,
                          "enabled": false,
                          "required": false,
                          "requiredMessage": null,
                          "omitWhenHidden": null,
                          "pattern": null,
                          "constraints": [

                          ],
                          "events": [

                          ],
                          "renderAttributes": {
                          },
                          "dataType": "string",
                          "renderType": "text",
                          "rows": 1
                        },
                        {
                          "type": "field",
                          "name": "Recurrence Description",
                          "label": "Recurrence Description",
                          "key": "f10",
                          "defaultValue": null,
                          "defaultResourceName": null,
                          "visible": true,
                          "enabled": false,
                          "required": "values('Polling') === \"Yes\"",
                          "requiredMessage": "Recurrence Data is required.",
                          "omitWhenHidden": null,
                          "pattern": null,
                          "constraints": [

                          ],
                          "events": [

                          ],
                          "renderAttributes": {
                          },
                          "dataType": "string",
                          "renderType": "text",
                          "rows": 1
                        },
                        {
                          "type": "content",
                          "renderType": "html",
                          "name": "Poll Activity",
                          "text": "<div id=\"poll-activity\">\n  <div id=\"next-poll\"></div>\n  <div id=\"last-poll\"></div>\n</div>",
                          "visible": true,
                          "renderAttributes": {
                          }
                        },
                        {
                          "type": "button",
                          "label": "Manage Recurrence Interval",
                          "name": "Manage Recurrence Interval Button",
                          "visible": true,
                          "enabled": true,
                          "renderType": "custom",
                          "renderAttributes": {
                          },
                          "events": [
                            {
                              "name": "Display Recurrence Modal",
                              "type": "Click",
                              "action": "Custom",
                              "code": "var url = bundle.spaceLocation();\nvar recurrence_exists = K('field[Recurrence Submission Id]').value() !== null ? true : false;\nif ( recurrence_exists ) {\n  url += '/app/datastore/submissions/' + K('field[Recurrence Submission Id]').value();\n} else {\n  url += '/app/datastore/forms/robot-definitions';\n}\n\nK.load({\n  path: url + \"?values[Embedded]=Embedded\",\n  container: '#recurrenceModal .modal-body',\n  loaded: function(form) { \n    // Set values ... but only for defaults the first time you open.\n    if ( !recurrence_exists ) {\n      form.select( 'field[Robot Name]' ).value( 'OnSolve Integration - ' + K('field[Name]').value() );\n      form.select( 'field[Description]' ).value( 'This robot was created from a submission to the OnSolve Integration form: \\'' + K('form').name() + '\\'.  It is normally not updated directly from the Robot Definition form, but through updates to the OnSolve Integration form.' );\n      form.select( 'field[Category]' ).value( 'OnSolve Integration' );\n      //form.select( 'field[Status]' ).value( 'Active' );\n      form.select( 'field[Task Tree]' ).value( 'OnSolve Integration - ' + K('form').name() );\n      form.select( 'field[Runtime Inputs]' ).value( '{\"Integration Configuration Submission Id\":\"' + K('submission').id() + '\"}' );\n      form.select( 'field[Notify Upon Each Run Completion]' ).value( 'No' );\n      form.select( 'field[Start Date]' ).value( (new Date).toISOString() );\n    } else {\n      // passing values on the parameter line (i.e., to set the embedded field flag) only works on create, so you pass it as a value after load on existing records.\n      form.select( 'field[Embedded]' ).value( 'Embedded' );\n    }\n  },\n  created: function(data) { \n    K('field[Recurrence Submission Id]').value( data['submission']['id'] );\n    K('field[Recurrence Description]').value( data['submission']['values']['Recurrence Description'] );\n    K('field[Recurrence Status]').value( data['submission']['values']['Status'] );\n    $('#recurrenceModal').modal('hide');\n  },\n  updated: function(data) { \n    K('field[Recurrence Description]').value( data['submission']['values']['Recurrence Description'] );\n    K('field[Recurrence Status]').value( data['submission']['values']['Status'] );\n    $('#recurrenceModal').modal('hide');\n  },\n  completed: function(data, action) {  }\n});\n                           \n$('#recurrenceModal').modal('show');"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Notification Message Details Container",
          "title": null,
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
            "class": "card"
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Notification Message Details Container Header",
              "text": "<div class=\"h6\">Notification Message Details</div>",
              "visible": true,
              "renderAttributes": {
                "class": "card-header bg-primary text-white"
              }
            },
            {
              "type": "section",
              "renderType": null,
              "name": "Notification Message Details Body",
              "title": "",
              "visible": true,
              "omitWhenHidden": null,
              "renderAttributes": {
                "class": "card-body"
              },
              "elements": [
                {
                  "type": "field",
                  "name": "Notification Message Template",
                  "label": "Notification Message Template",
                  "key": "f9",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": true,
                  "enabled": true,
                  "required": true,
                  "requiredMessage": null,
                  "omitWhenHidden": null,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [
                    {
                      "name": "Get Placeholders",
                      "type": "Change",
                      "action": "Custom",
                      "code": "K('section[Placeholders Container]').hide();\nbundle.ext.forms[K('form').slug()].getPlaceholders();",
                      "runIf": ""
                    },
                    {
                      "name": "Set Notification Method",
                      "type": "Change",
                      "action": "Set Fields",
                      "mappings": [
                        {
                          "field": "Notification Method",
                          "value": "${resources('Onsolve Notification by Name:Notification Method')}",
                          "visible": true
                        }
                      ],
                      "bridgedResourceName": "Onsolve Notification by Name",
                      "runIf": "values('Notification Message Template') !== null"
                    },
                    {
                      "name": "Clear Notification Method",
                      "type": "Change",
                      "action": "Set Fields",
                      "mappings": [
                        {
                          "field": "Notification Method",
                          "value": "${null}",
                          "visible": null
                        }
                      ],
                      "runIf": "values('Notification Message Template') === null"
                    }
                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "dropdown",
                  "choicesResourceName": "Onsolve Notifications",
                  "choicesRunIf": "",
                  "choices": {
                    "label": "${resources('Onsolve Notifications:Notification Name')}",
                    "value": "${resources('Onsolve Notifications:Notification Name')}"
                  }
                },
                {
                  "type": "field",
                  "name": "Notification Method",
                  "label": "Notification Method",
                  "key": "f32",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": true,
                  "enabled": false,
                  "required": false,
                  "requiredMessage": null,
                  "omitWhenHidden": null,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [
                    {
                      "name": "Enable / Disable Recipient Fields and Set Escalation Level to 1",
                      "type": "Change",
                      "action": "Custom",
                      "code": "K('field[Recipients JSON]').value( null );\nbundle.ext.forms[K('form').slug()].populateRecipientData();",
                      "runIf": ""
                    }
                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 1
                },
                {
                  "type": "section",
                  "renderType": null,
                  "name": "Placeholders Container",
                  "title": null,
                  "visible": false,
                  "omitWhenHidden": false,
                  "renderAttributes": {
                    "class": "card"
                  },
                  "elements": [
                    {
                      "type": "content",
                      "renderType": "html",
                      "name": "Placeholders Header",
                      "text": "<div class=\"h6\">Placeholders</div>",
                      "visible": true,
                      "renderAttributes": {
                        "class": "card-header bg-warning"
                      }
                    },
                    {
                      "type": "section",
                      "renderType": null,
                      "name": "Placeholder Body",
                      "title": null,
                      "visible": true,
                      "omitWhenHidden": null,
                      "renderAttributes": {
                        "class": "card-body"
                      },
                      "elements": [
                        {
                          "type": "content",
                          "renderType": "html",
                          "name": "Placeholder Content",
                          "text": "<div class=\"placeholders\"></div>",
                          "visible": true,
                          "renderAttributes": {
                          }
                        },
                        {
                          "type": "content",
                          "renderType": "html",
                          "name": "Notification Data Mapping",
                          "text": "Either a representation of data stored in a JSON object, or a subform with entires for each parameter / variable name from the notification.\n\nCould do it like bridges, where you import the notification, then it \"automatically\" looks for parameters (or you can add them manually) into a separate datastore.  Then, you provide a value to the parameters in yet another datastore.  The task engine looks at the parameter values to generate it's data.  Overly complex?  How to keep updated?",
                          "visible": false,
                          "renderAttributes": {
                          }
                        },
                        {
                          "type": "field",
                          "name": "Placeholder Data",
                          "label": "Placeholder Data",
                          "key": "f20",
                          "defaultValue": null,
                          "defaultResourceName": null,
                          "visible": false,
                          "enabled": false,
                          "required": false,
                          "requiredMessage": null,
                          "omitWhenHidden": false,
                          "pattern": null,
                          "constraints": [

                          ],
                          "events": [

                          ],
                          "renderAttributes": {
                          },
                          "dataType": "string",
                          "renderType": "text",
                          "rows": 3
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "section",
                  "renderType": null,
                  "name": "Recipients Container",
                  "title": null,
                  "visible": true,
                  "omitWhenHidden": null,
                  "renderAttributes": {
                    "class": "card"
                  },
                  "elements": [
                    {
                      "type": "content",
                      "renderType": "html",
                      "name": "Recipients Container Header",
                      "text": "<div class=\"h5\">Recipients</div>\n<div>Use this syntax to replace a value with a field from ServiceNow:  {{ServiceNow Field Name}}</div>",
                      "visible": true,
                      "renderAttributes": {
                        "class": "card-header bg-warning"
                      }
                    },
                    {
                      "type": "section",
                      "renderType": null,
                      "name": "Recipients Container Body",
                      "title": "",
                      "visible": true,
                      "omitWhenHidden": null,
                      "renderAttributes": {
                        "class": "card-body"
                      },
                      "elements": [
                        {
                          "type": "field",
                          "name": "Escalation Level",
                          "label": "Escalation Level",
                          "key": "f48",
                          "defaultValue": null,
                          "defaultResourceName": null,
                          "visible": "values('Notification Method') === \"firstResponseInfo\" || values('Notification Method') === \"calloutInfo\"",
                          "enabled": true,
                          "required": false,
                          "requiredMessage": null,
                          "omitWhenHidden": true,
                          "pattern": null,
                          "constraints": [

                          ],
                          "events": [
                            {
                              "name": "Populate Notification Recipients",
                              "type": "Change",
                              "action": "Custom",
                              "code": "var escalationLevels = JSON.parse( K('field[Recipients JSON]').value() || \"{}\");\nif ( escalationLevels[values('Escalation Level')] ) {\n  var maxResponse = escalationLevels[values('Escalation Level')]['maxResponse'],\n      individuals = escalationLevels[values('Escalation Level')]['individuals'],\n      groups = escalationLevels[values('Escalation Level')]['groups'],\n      schedules = escalationLevels[values('Escalation Level')]['schedules'];\n\tK('field[Max Response Time]').value(maxResponse);\n  K('field[Individuals]').value(individuals);\n\tK('field[Groups]').value(groups);\n\tK('field[Schedules]').value(schedules);\n} else {\n  K('field[Max Response Time]').value( null );\n  K('field[Individuals]').value( null );\n\tK('field[Groups]').value( null );\n\tK('field[Schedules]').value( null );\n}"
                            }
                          ],
                          "renderAttributes": {
                          },
                          "dataType": "string",
                          "renderType": "radio",
                          "choicesResourceName": null,
                          "choicesRunIf": null,
                          "choices": [
                            {
                              "label": "1",
                              "value": "Escalation Level 1"
                            },
                            {
                              "label": "2",
                              "value": "Escalation Level 2"
                            },
                            {
                              "label": "3",
                              "value": "Escalation Level 3"
                            },
                            {
                              "label": "4",
                              "value": "Escalation Level 4"
                            },
                            {
                              "label": "5",
                              "value": "Escalation Level 5"
                            },
                            {
                              "label": "6",
                              "value": "Escalation Level 6"
                            },
                            {
                              "label": "7",
                              "value": "Escalation Level 7"
                            },
                            {
                              "label": "8",
                              "value": "Escalation Level 8"
                            },
                            {
                              "label": "9",
                              "value": "Escalation Level 9"
                            },
                            {
                              "label": "10",
                              "value": "Escalation Level 10"
                            }
                          ]
                        },
                        {
                          "type": "content",
                          "renderType": "html",
                          "name": "Escalation Levels in Use Message",
                          "text": "<div class=\"small\">Configured escalation levels: <span id=\"escalation-levels\"><span class=\"configured-level\">None</span></span></div>",
                          "visible": "values('Notification Method') === \"firstResponseInfo\" || values('Notification Method') === \"calloutInfo\"",
                          "renderAttributes": {
                            "style": "margin-top: -5px; margin-bottom: 10px"
                          }
                        },
                        {
                          "type": "field",
                          "name": "Max Response Time",
                          "label": "Max Response Time (seconds)",
                          "key": "f39",
                          "defaultValue": null,
                          "defaultResourceName": null,
                          "visible": "values('Notification Method') === \"firstResponseInfo\" || values('Notification Method') === \"calloutInfo\"",
                          "enabled": true,
                          "required": false,
                          "requiredMessage": null,
                          "omitWhenHidden": true,
                          "pattern": null,
                          "constraints": [

                          ],
                          "events": [

                          ],
                          "renderAttributes": {
                          },
                          "dataType": "string",
                          "renderType": "text",
                          "rows": 1
                        },
                        {
                          "type": "content",
                          "renderType": "html",
                          "name": "Max Response Time Instruction",
                          "text": "<small>The Max Response Time will only be used for escalation levels not already defined by the message template; it does not override any existing timeout value. If a value is not provided for an escalationl level that is not predefined by the message template, 3600 will be used.</small>",
                          "visible": "values('Notification Method') === \"firstResponseInfo\" || values('Notification Method') === \"calloutInfo\"",
                          "renderAttributes": {
                            "style": "margin-top: -5px;"
                          }
                        },
                        {
                          "type": "field",
                          "name": "Individuals",
                          "label": "Individual(s) (comma separated list)",
                          "key": "f17",
                          "defaultValue": null,
                          "defaultResourceName": null,
                          "visible": true,
                          "enabled": true,
                          "required": false,
                          "requiredMessage": null,
                          "omitWhenHidden": null,
                          "pattern": null,
                          "constraints": [

                          ],
                          "events": [
                            {
                              "name": "Apply Escalation Recipients",
                              "type": "Change",
                              "action": "Custom",
                              "code": "bundle.ext.forms[K('form').slug()].applyEscalationRecipientData();",
                              "runIf": "values('Notification Method') === \"firstResponseInfo\" || values('Notification Method') === \"calloutInfo\" && values('Escalation Level') !== null"
                            }
                          ],
                          "renderAttributes": {
                          },
                          "dataType": "string",
                          "renderType": "text",
                          "rows": 1
                        },
                        {
                          "type": "field",
                          "name": "Groups",
                          "label": "Group(s) (comma separated list)",
                          "key": "f18",
                          "defaultValue": null,
                          "defaultResourceName": null,
                          "visible": true,
                          "enabled": true,
                          "required": false,
                          "requiredMessage": null,
                          "omitWhenHidden": null,
                          "pattern": null,
                          "constraints": [

                          ],
                          "events": [
                            {
                              "name": "Apply Escalation Recipients",
                              "type": "Change",
                              "action": "Custom",
                              "code": "bundle.ext.forms[K('form').slug()].applyEscalationRecipientData();",
                              "runIf": "values('Notification Method') === \"firstResponseInfo\" || values('Notification Method') === \"calloutInfo\" && values('Escalation Level') !== null"
                            }
                          ],
                          "renderAttributes": {
                          },
                          "dataType": "string",
                          "renderType": "text",
                          "rows": 1
                        },
                        {
                          "type": "field",
                          "name": "Schedules",
                          "label": "Schedule(s) (comma separated list)",
                          "key": "f19",
                          "defaultValue": null,
                          "defaultResourceName": null,
                          "visible": true,
                          "enabled": true,
                          "required": false,
                          "requiredMessage": null,
                          "omitWhenHidden": null,
                          "pattern": null,
                          "constraints": [

                          ],
                          "events": [
                            {
                              "name": "Apply Escalation Recipients",
                              "type": "Change",
                              "action": "Custom",
                              "code": "bundle.ext.forms[K('form').slug()].applyEscalationRecipientData();",
                              "runIf": "values('Notification Method') === \"firstResponseInfo\" || values('Notification Method') === \"calloutInfo\" && values('Escalation Level') !== null"
                            }
                          ],
                          "renderAttributes": {
                          },
                          "dataType": "string",
                          "renderType": "text",
                          "rows": 1
                        },
                        {
                          "type": "field",
                          "name": "Recipients JSON",
                          "label": "Recipients JSON",
                          "key": "f30",
                          "defaultValue": null,
                          "defaultResourceName": null,
                          "visible": false,
                          "enabled": false,
                          "required": false,
                          "requiredMessage": null,
                          "omitWhenHidden": false,
                          "pattern": null,
                          "constraints": [

                          ],
                          "events": [

                          ],
                          "renderAttributes": {
                          },
                          "dataType": "string",
                          "renderType": "text",
                          "rows": 3
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Notification Initiation Container",
          "title": "",
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
            "class": "card"
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Notification Initiation Container Header",
              "text": "<div class=\"h5\">Initiation Update to Cherwell</div>",
              "visible": true,
              "renderAttributes": {
                "class": "card-header bg-primary text-white"
              }
            },
            {
              "type": "section",
              "renderType": null,
              "name": "Notification Initiation Container Body",
              "title": null,
              "visible": true,
              "omitWhenHidden": null,
              "renderAttributes": {
                "class": "card-body"
              },
              "elements": [
                {
                  "type": "field",
                  "name": "Notification Initiation Action",
                  "label": "Initiation Journal Update",
                  "key": "f35",
                  "defaultValue": "None",
                  "defaultResourceName": null,
                  "visible": true,
                  "enabled": true,
                  "required": true,
                  "requiredMessage": null,
                  "omitWhenHidden": null,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "radio",
                  "choicesResourceName": null,
                  "choicesRunIf": null,
                  "choices": [
                    {
                      "label": "None",
                      "value": "None"
                    },
                    {
                      "label": "Status Only",
                      "value": "Status Only"
                    },
                    {
                      "label": "Standard Reporting",
                      "value": "Standard Reporting"
                    },
                    {
                      "label": "Custom Action",
                      "value": "Custom Action"
                    }
                  ]
                },
                {
                  "type": "field",
                  "name": "Initiation Custom Action Task Tree",
                  "label": "Custom Action Task Tree",
                  "key": "f37",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": "values('Notification Initiation Action') === \"Custom Action\"",
                  "enabled": true,
                  "required": "values('Notification Initiation Action') === \"Custom Action\"",
                  "requiredMessage": null,
                  "omitWhenHidden": true,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 1
                },
                {
                  "type": "field",
                  "name": "Initiation Custom Action Parameters",
                  "label": "Custom Action Parameters",
                  "key": "f38",
                  "defaultValue": "",
                  "defaultResourceName": null,
                  "visible": false,
                  "enabled": true,
                  "required": false,
                  "requiredMessage": null,
                  "omitWhenHidden": false,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 1
                },
                {
                  "type": "section",
                  "renderType": null,
                  "name": "Initiation Custom Action Parameters Container",
                  "title": null,
                  "visible": "values('Notification Initiation Action') === \"Custom Action\"",
                  "omitWhenHidden": false,
                  "renderAttributes": {
                    "class": "card"
                  },
                  "elements": [
                    {
                      "type": "content",
                      "renderType": "html",
                      "name": "Initiation Custom Action Parameters Container Header",
                      "text": "<div class=\"h6\">Custom Action Parameters</div>",
                      "visible": true,
                      "renderAttributes": {
                        "class": "card-header bg-warning"
                      }
                    },
                    {
                      "type": "section",
                      "renderType": null,
                      "name": "Initiation Custom Action Parameters Body",
                      "title": null,
                      "visible": true,
                      "omitWhenHidden": null,
                      "renderAttributes": {
                        "class": "card-body"
                      },
                      "elements": [
                        {
                          "type": "content",
                          "renderType": "html",
                          "name": "Initiation Custom Action Parameters Display",
                          "text": "<div id=\"initiation-custom-action-params\"></div>",
                          "visible": "values('Notification Initiation Action') === \"Custom Action\"",
                          "renderAttributes": {
                          }
                        },
                        {
                          "type": "button",
                          "label": "Add Parameter",
                          "name": "Add Custom Action Parameter Button",
                          "visible": "values('Notification Initiation Action') === \"Custom Action\"",
                          "enabled": true,
                          "renderType": "custom",
                          "renderAttributes": {
                          },
                          "events": [
                            {
                              "name": "Add Custom Parameter",
                              "type": "Click",
                              "action": "Custom",
                              "code": "bundle.ext.forms[K('form').slug()].addJsonInput(\"initiation-custom-action-params\", true);"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "field",
                  "name": "Initiation Standard Action Task Tree",
                  "label": "Standard Action Task Tree",
                  "key": "f36",
                  "defaultValue": "Cherwell Standard Notification Initiation Process",
                  "defaultResourceName": null,
                  "visible": false,
                  "enabled": false,
                  "required": false,
                  "requiredMessage": null,
                  "omitWhenHidden": false,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 1
                },
                {
                  "type": "field",
                  "name": "Initiation Standard Action Parameters",
                  "label": "Standard Action Parameters",
                  "key": "f42",
                  "defaultValue": "{\"Report Name\":\"Kinetic Notification Results\", \"Timezone\":\"UTC\", \"Responses Used\":\"1\", \"Success Responder Type\":\"3\", \"Detail Level\":\"1\",\"Journal Type\":\"JournalNote\",\"Journal Object Type Id\":\"934d8181ba9d3a6a506d7643e1bc71f70fa9b47412\"}",
                  "defaultResourceName": null,
                  "visible": false,
                  "enabled": true,
                  "required": "values('Notification Result Action') === \"Standard Reporting\"",
                  "requiredMessage": null,
                  "omitWhenHidden": false,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 2
                },
                {
                  "type": "section",
                  "renderType": null,
                  "name": "Initiation Standard Action Parameters Container",
                  "title": null,
                  "visible": "values('Notification Initiation Action') === \"Standard Reporting\"",
                  "omitWhenHidden": false,
                  "renderAttributes": {
                    "class": "card"
                  },
                  "elements": [
                    {
                      "type": "content",
                      "renderType": "html",
                      "name": "Initiation Standard Action Parameters Container Header",
                      "text": "<div class=\"h6\">Standard Reporting Parameters</div>",
                      "visible": true,
                      "renderAttributes": {
                        "class": "card-header bg-warning"
                      }
                    },
                    {
                      "type": "section",
                      "renderType": null,
                      "name": "Initiation Standard Action Parameters Container Body",
                      "title": null,
                      "visible": true,
                      "omitWhenHidden": null,
                      "renderAttributes": {
                        "class": "card-body"
                      },
                      "elements": [
                        {
                          "type": "content",
                          "renderType": "html",
                          "name": "Initiation Standard Action Parameter Display",
                          "text": "<div id=\"initiation-standard-action-params\"></div>",
                          "visible": "values('Notification Initiation Action') === \"Standard Reporting\"",
                          "renderAttributes": {
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Notification Result Container",
          "title": null,
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
            "class": "card"
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Notification Result Container Header",
              "text": "<div class=\"h5\">Completion Update to Cherwell</div>\t",
              "visible": true,
              "renderAttributes": {
                "class": "card-header bg-primary text-white"
              }
            },
            {
              "type": "section",
              "renderType": null,
              "name": "Notification Result Container Body",
              "title": "",
              "visible": true,
              "omitWhenHidden": null,
              "renderAttributes": {
                "class": "card-body"
              },
              "elements": [
                {
                  "type": "field",
                  "name": "Notification Result Action",
                  "label": "Completion Journal Update",
                  "key": "f11",
                  "defaultValue": "None",
                  "defaultResourceName": null,
                  "visible": true,
                  "enabled": true,
                  "required": true,
                  "requiredMessage": null,
                  "omitWhenHidden": null,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "radio",
                  "choicesResourceName": null,
                  "choicesRunIf": null,
                  "choices": [
                    {
                      "label": "None",
                      "value": "None"
                    },
                    {
                      "label": "Status Only",
                      "value": "Status Only"
                    },
                    {
                      "label": "Standard Reporting",
                      "value": "Standard Reporting"
                    },
                    {
                      "label": "Custom Action",
                      "value": "Custom Action"
                    }
                  ]
                },
                {
                  "type": "field",
                  "name": "Assign Responder",
                  "label": "Assign Responder",
                  "key": "f49",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": "(values('Notification Method') === \"firstResponseInfo\" || values('Notification Method') === \"calloutInfo\") && values('Notification Result Action') !== \"None\"",
                  "enabled": true,
                  "required": "(values('Notification Method') === \"firstResponseInfo\" || values('Notification Method') === \"calloutInfo\") && values('Notification Result Action') !== \"None\"",
                  "requiredMessage": null,
                  "omitWhenHidden": true,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "radio",
                  "choicesResourceName": null,
                  "choicesRunIf": null,
                  "choices": [
                    {
                      "label": "Yes",
                      "value": "Yes"
                    },
                    {
                      "label": "No",
                      "value": "No"
                    }
                  ]
                },
                {
                  "type": "field",
                  "name": "Result Custom Action Task Tree",
                  "label": "Custom Action Task Tree",
                  "key": "f13",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": "values('Notification Result Action') === \"Custom Action\"",
                  "enabled": true,
                  "required": "values('Notification Result Action') === \"Custom Action\"",
                  "requiredMessage": null,
                  "omitWhenHidden": true,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 1
                },
                {
                  "type": "field",
                  "name": "Result Custom Action Parameters",
                  "label": "Custom Action Parameters",
                  "key": "f29",
                  "defaultValue": "",
                  "defaultResourceName": null,
                  "visible": false,
                  "enabled": true,
                  "required": false,
                  "requiredMessage": null,
                  "omitWhenHidden": false,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 1
                },
                {
                  "type": "section",
                  "renderType": null,
                  "name": "Result Custom Action Parameters Container",
                  "title": null,
                  "visible": "values('Notification Result Action') === \"Custom Action\"",
                  "omitWhenHidden": false,
                  "renderAttributes": {
                    "class": "card"
                  },
                  "elements": [
                    {
                      "type": "content",
                      "renderType": "html",
                      "name": "Result Customer Action Parameters Container Header",
                      "text": "<div class=\"h5\">Custom Action Parameters</div>",
                      "visible": true,
                      "renderAttributes": {
                        "class": "card-header bg-warning"
                      }
                    },
                    {
                      "type": "section",
                      "renderType": null,
                      "name": "Result Customer Action Parameters Container Body",
                      "title": null,
                      "visible": true,
                      "omitWhenHidden": null,
                      "renderAttributes": {
                        "class": "card-body"
                      },
                      "elements": [
                        {
                          "type": "content",
                          "renderType": "html",
                          "name": "Results Customer Action Parameters Display",
                          "text": "<div id=\"result-custom-action-params\"></div>",
                          "visible": "values('Notification Result Action') === \"Custom Action\"",
                          "renderAttributes": {
                          }
                        },
                        {
                          "type": "button",
                          "label": "Add Parameter",
                          "name": "Add Result Customer Action Parameter Button",
                          "visible": "values('Notification Result Action') === \"Custom Action\"",
                          "enabled": true,
                          "renderType": "custom",
                          "renderAttributes": {
                          },
                          "events": [
                            {
                              "name": "Add Custom Parameter",
                              "type": "Click",
                              "action": "Custom",
                              "code": "bundle.ext.forms[K('form').slug()].addJsonInput(\"result-custom-action-params\", true);"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "field",
                  "name": "Result Standard Action Task Tree",
                  "label": "Standard Action Task Tree",
                  "key": "f21",
                  "defaultValue": "Cherwell Standard Results Process",
                  "defaultResourceName": null,
                  "visible": false,
                  "enabled": false,
                  "required": false,
                  "requiredMessage": null,
                  "omitWhenHidden": false,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 1
                },
                {
                  "type": "field",
                  "name": "Result Standard Action Parameters",
                  "label": "Standard Action Parameters",
                  "key": "f12",
                  "defaultValue": "{\"Report Name\":\"Kinetic Notification Results\", \"Timezone\":\"UTC\", \"Responses Used\":\"1\", \"Success Responder Type\":\"3\", \"Detail Level\":\"1\",\"Journal Type\":\"JournalNote\",\"Journal Object Type Id\":\"934d8181ba9d3a6a506d7643e1bc71f70fa9b47412\"}",
                  "defaultResourceName": null,
                  "visible": false,
                  "enabled": true,
                  "required": "values('Notification Result Action') === \"Standard Reporting\"",
                  "requiredMessage": null,
                  "omitWhenHidden": false,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 2
                },
                {
                  "type": "section",
                  "renderType": null,
                  "name": "Result Standard Action Parameters Container",
                  "title": null,
                  "visible": "values('Notification Result Action') === \"Standard Reporting\"",
                  "omitWhenHidden": false,
                  "renderAttributes": {
                    "class": "card"
                  },
                  "elements": [
                    {
                      "type": "content",
                      "renderType": "html",
                      "name": "Result Standard Action Paramaters Container Header",
                      "text": "<div class=\"h5\">Standard Reporting Parameters</div>",
                      "visible": true,
                      "renderAttributes": {
                        "class": "card-header bg-warning"
                      }
                    },
                    {
                      "type": "section",
                      "renderType": null,
                      "name": "Result Standard Action Parameters Container Body",
                      "title": null,
                      "visible": true,
                      "omitWhenHidden": null,
                      "renderAttributes": {
                        "class": "card-body"
                      },
                      "elements": [
                        {
                          "type": "content",
                          "renderType": "html",
                          "name": "Result Standard Action Parameters Display",
                          "text": "<div id=\"result-standard-action-params\"></div>",
                          "visible": "values('Notification Result Action') === \"Standard Reporting\"",
                          "renderAttributes": {
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Interim Notification Container",
          "title": null,
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
            "class": "card"
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Interim Notification Container Header",
              "text": "<div class=\"h5\">Interim Updates to Cherwell</div>",
              "visible": true,
              "renderAttributes": {
                "class": "card-header bg-primary text-white"
              }
            },
            {
              "type": "section",
              "renderType": null,
              "name": "Interim Notification Container Body A",
              "title": null,
              "visible": true,
              "omitWhenHidden": null,
              "renderAttributes": {
                "class": "card-body",
                "style": "padding-top: 0px"
              },
              "elements": [
                {
                  "type": "field",
                  "name": "Interim Update Action",
                  "label": "Interim Journal Updates",
                  "key": "f26",
                  "defaultValue": "None",
                  "defaultResourceName": null,
                  "visible": true,
                  "enabled": true,
                  "required": true,
                  "requiredMessage": null,
                  "omitWhenHidden": null,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "radio",
                  "choicesResourceName": null,
                  "choicesRunIf": null,
                  "choices": [
                    {
                      "label": "None",
                      "value": "None"
                    },
                    {
                      "label": "Standard Reporting",
                      "value": "Standard Reporting"
                    },
                    {
                      "label": "Custom Action",
                      "value": "Custom Action"
                    }
                  ]
                },
                {
                  "type": "field",
                  "name": "Interim Update Interval",
                  "label": "Interim Update Interval (in minutes, minimum 5)",
                  "key": "f28",
                  "defaultValue": "5",
                  "defaultResourceName": null,
                  "visible": "values('Interim Update Action') !== \"None\"",
                  "enabled": true,
                  "required": "values('Interim Update Action') !== \"None\"",
                  "requiredMessage": null,
                  "omitWhenHidden": true,
                  "pattern": null,
                  "constraints": [
                    {
                      "content": "values('Interim Update Interval') >= 5",
                      "message": "Interim Update Interval must be 5 or greater."
                    }
                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 1
                },
                {
                  "type": "field",
                  "name": "Interim Custom Action Task Tree",
                  "label": "Interim Custom Action Task Tree",
                  "key": "f23",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": "values('Interim Update Action') === \"Custom Action\"",
                  "enabled": true,
                  "required": "values('Interim Update Action') === \"Custom Action\"",
                  "requiredMessage": null,
                  "omitWhenHidden": true,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 1
                },
                {
                  "type": "field",
                  "name": "Interim Custom Action Parameters",
                  "label": "Interim Custom Action Parameters",
                  "key": "f27",
                  "defaultValue": "",
                  "defaultResourceName": null,
                  "visible": false,
                  "enabled": true,
                  "required": false,
                  "requiredMessage": null,
                  "omitWhenHidden": false,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 2
                },
                {
                  "type": "section",
                  "renderType": null,
                  "name": "Interim Custom Action Parameters Container",
                  "title": null,
                  "visible": "values('Interim Update Action') === \"Custom Action\"",
                  "omitWhenHidden": false,
                  "renderAttributes": {
                    "class": "card"
                  },
                  "elements": [
                    {
                      "type": "content",
                      "renderType": "html",
                      "name": "Interim Custom Action Parameters Container Header",
                      "text": "<div class=\"h6\">Custom Action Parameters</div>",
                      "visible": true,
                      "renderAttributes": {
                        "class": "card-header bg-warning"
                      }
                    },
                    {
                      "type": "section",
                      "renderType": null,
                      "name": "Interim Custom Action Parameter Container Body",
                      "title": null,
                      "visible": true,
                      "omitWhenHidden": null,
                      "renderAttributes": {
                        "class": "card-body"
                      },
                      "elements": [
                        {
                          "type": "content",
                          "renderType": "html",
                          "name": "Interim Custom Action Parameters Display",
                          "text": "<div id=\"interim-custom-action-params\"></div>",
                          "visible": "values('Interim Update Action') === \"Custom Action\"",
                          "renderAttributes": {
                          }
                        },
                        {
                          "type": "button",
                          "label": "Add Parameter",
                          "name": "Add Interim Custom Action Parameter Button",
                          "visible": "values('Interim Update Action') === \"Custom Action\"",
                          "enabled": true,
                          "renderType": "custom",
                          "renderAttributes": {
                          },
                          "events": [
                            {
                              "name": "Add Custom Parameter",
                              "type": "Click",
                              "action": "Custom",
                              "code": "bundle.ext.forms[K('form').slug()].addJsonInput(\"interim-custom-action-params\", true);"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "field",
                  "name": "Interim Standard Action Task Tree",
                  "label": "Interim Standard Action Task Tree",
                  "key": "f24",
                  "defaultValue": "Cherwell Standard Interim Results Process",
                  "defaultResourceName": null,
                  "visible": false,
                  "enabled": false,
                  "required": false,
                  "requiredMessage": null,
                  "omitWhenHidden": false,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 1
                },
                {
                  "type": "field",
                  "name": "Interim Standard Action Parameters",
                  "label": "Interim Standard Action Parameters",
                  "key": "f25",
                  "defaultValue": "{\"Report Name\":\"Kinetic Notification Results\", \"Timezone\":\"UTC\", \"Responses Used\":\"1\", \"Success Responder Type\":\"3\", \"Detail Level\":\"1\",\"Journal Type\":\"JournalNote\",\"Journal Object Type Id\":\"934d8181ba9d3a6a506d7643e1bc71f70fa9b47412\"}",
                  "defaultResourceName": null,
                  "visible": false,
                  "enabled": true,
                  "required": "values('Interim Update Action') === \"Standard Reporting\"",
                  "requiredMessage": null,
                  "omitWhenHidden": false,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 2
                },
                {
                  "type": "section",
                  "renderType": null,
                  "name": "Interim Standard Action Parameters Container",
                  "title": null,
                  "visible": "values('Interim Update Action') === \"Standard Reporting\"",
                  "omitWhenHidden": false,
                  "renderAttributes": {
                    "class": "card"
                  },
                  "elements": [
                    {
                      "type": "content",
                      "renderType": "html",
                      "name": "Interim Standard Action Parameters Container Header",
                      "text": "<div class=\"h6\">Standard Reporting Parameters</div>",
                      "visible": true,
                      "renderAttributes": {
                        "class": "card-header bg-warning"
                      }
                    },
                    {
                      "type": "section",
                      "renderType": null,
                      "name": "Interim Standard Action Parameters Container Body",
                      "title": null,
                      "visible": true,
                      "omitWhenHidden": null,
                      "renderAttributes": {
                        "class": "card-body"
                      },
                      "elements": [
                        {
                          "type": "content",
                          "renderType": "html",
                          "name": "Interim Standard Action Parameters Display",
                          "text": "<div id=\"interim-standard-action-params\"></div>",
                          "visible": "values('Interim Update Action') === \"Standard Reporting\"",
                          "renderAttributes": {
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Buttons Section",
          "title": null,
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "button",
              "label": "Save",
              "name": "Submit Button",
              "visible": true,
              "enabled": true,
              "renderType": "submit-page",
              "renderAttributes": {
              }
            }
          ]
        }
      ],
      "events": [
        {
          "name": "Load Custom Page Code",
          "type": "Load",
          "action": "Custom",
          "code": "var formSlug = K('form').slug();\n// Confirm bundle.ext exists, or create it\nbundle.ext = bundle.ext || {};\n// Confirm bundle.ext.forms.<form_slug> exists, or create it\nbundle.ext.forms = bundle.ext.forms || {};\nbundle.ext.forms[formSlug] = bundle.ext.forms[formSlug] || {};\n\n// Create variable to custom appointment\nvar integration = bundle.ext.forms[formSlug];\n//var integration = bundle.ext.forms.servicenow;\n\nintegration.getPlaceholders = function() {\n  // Clear placeholders\n  $('div.placeholders').empty();\n\n  // Retrieve Notification Placeholders\n  K('bridgedResource[Onsolve Notification Placeholders]').load({\n    success: function(bridgedData) {\n      if (bridgedData.length > 0) {\n        K('section[Placeholders Container]').show();\n      }\n      $.each( bridgedData, function( k, v ) {\n        var help_array = [];\n        help_array.push( 'Optional: ' + v['Optional'] );\n        \n        //if checkbox, value must result in true or false\n        if ( v['Placeholder Type'] === \"checkbox\" ) {\n          help_array.push( \"Note: When populated, field must evaluate to 'true' or 'false'\" );\n        };\n        \n        //if multiple choice, value must result in one of these options\n        if ( v['Placeholder Type'] === \"multipleChoice\" ) {\n          var metaData = JSON.parse( v['Meta Data'] );\n          if ( metaData['Options'] ) {\n            var optionsArray = [];\n            $.each( metaData['Options'], function( i, v ) {\n              optionsArray.push( v['value'] );\n            });\n            help_array.push( \"Note: When populated, field must evaluate to one of these values: \" + optionsArray.join(\", \") );\n          };\n        };\n        var help_el = '<small id=\"' + v['Id'] + '-help\" class=\"form-text text-muted\">' + help_array.join(\"; \") + '</small>';\n        var ph_container_el = $('<div class=\"placeholder\"></div>');\n        var ph_el = $('<div class=\"form-group\"></div>');\n        ph_el.append('<label for=\"' + v['Id'] + '\">'+ v['Placeholder Name'] + '</label>');\n        ph_el.append('<input type=\"text\" data-placeholdername=\"' + v['Placeholder Name'] + '\" class=\"form-control\" id=\"' + v['Id'] + '\" placeholder=\"' + v['Default Value'] + '\">');\n        ph_el.append(help_el);\n        ph_container_el.append(ph_el);\n        $('div.placeholders').append(ph_container_el);\n\n        // Populate the placeholder values with data.\n        $.each( JSON.parse( K('field[Placeholder Data]').value() || \"[]\" ), function( i, v ) {\n          $( 'div.placeholders input[data-placeholdername=\"' + v['name'] + '\"]' ).val( v['value'] );\n        });\n      }); \n    }\n  });\n  // Render\n  // Retrieve Notification Placeholder Values and populate\n}\nintegration.savePlaceholders = function() {\n  // Write to Notification Placeholder Values\n  var placeholderData=[];\n  $('.placeholders .placeholder input').each( function() {\n    var phName = $(this).data('placeholdername');\n    var phValue = $(this).val();\n    placeholderData.push( {\"name\": phName, \"value\": phValue} )\n  })\n  K('field[Placeholder Data]').value( JSON.stringify(placeholderData) );\n}\n\nintegration.enableFields = function() {\n  // Update to always make fields enabled\n  /*\n  // If the Notification Method is already populated, and of certain types, \n  // make the recipients field editable.\n  if ( K('field[Notification Method]').value() === \"broadcastInfo\" || K('field[Notification Method]').value() === \"bulletinBoardInfo\" ) {\n    K('field[Max Response Time]').disable();  //always disabled initially.\n    K('field[Individuals]').enable();\n    K('field[Groups]').enable();\n    K('field[Schedules]').enable();\n  } else {\n    K('field[Max Response Time]').disable();\n    K('field[Individuals]').disable();\n    K('field[Groups]').disable();\n    K('field[Schedules]').disable();\n  }\n  */\n}\n\nintegration.applyEscalationRecipientData = function() {\n  // Set fields read only\n  /*\n  K('field[Max Response Time]').disable();\n  K('field[Individuals]').disable();\n  K('field[Groups]').disable();\n  K('field[Schedules]').disable();\n  */\n  \n  // store information\n\n  var escalationLevels = JSON.parse( K('field[Recipients JSON]').value() || \"{}\" ),\n      maxResponse = K('field[Max Response Time]').value(),\n      individuals = K('field[Individuals]').value(),\n      groups = K('field[Groups]').value(),\n      schedules = K('field[Schedules]').value();\n      //oncall = K('field[OnCall Support Group Id]').value();\n\n  if ( (!individuals || individuals.trim() === \"\") && (!groups || groups.trim() === \"\") && (!schedules || schedules.trim() === \"\") ) {\n    // delete element from hash in javascript\n    delete escalationLevels[ K('field[Escalation Level]').value() ];\n  } else {\n    // only populate the values that have content\n    escalationLevels[ K('field[Escalation Level]').value() ] = {}\n    if (maxResponse && maxResponse.trim() !== \"\") {\n      escalationLevels[ K('field[Escalation Level]').value() ][\"maxResponse\"] = maxResponse;\n    }\n    if (individuals && individuals.trim() !== \"\") {\n      escalationLevels[ K('field[Escalation Level]').value() ][\"individuals\"] = individuals;\n    }\n    if (groups && groups.trim() !== \"\") {\n      escalationLevels[ K('field[Escalation Level]').value() ][\"groups\"] = groups;\n    }\n    if (schedules && schedules.trim() !== \"\") {\n      escalationLevels[ K('field[Escalation Level]').value() ][\"schedules\"] = schedules;\n    }\n  }\n  \n  K('field[Recipients JSON]').value( JSON.stringify(escalationLevels) );\n  \n  integration.populateConfiguredEscalationLevels();\n}\n\nintegration.consolidateRecipientData = function() {\n  var maxResponse = K('field[Max Response Time]').value(),\n      individuals = K('field[Individuals]').value(),\n      groups = K('field[Groups]').value(),\n      schedules = K('field[Schedules]').value(),\n      recipientData = {};\n\n  // only populate the values that have content\n\tif (maxResponse && maxResponse.trim() !== \"\") {\n    recipientData[\"maxResponse\"] = maxResponse;\n  }\n  if (individuals && individuals.trim() !== \"\") {\n    recipientData[\"individuals\"] = individuals;\n  }\n  if (groups && groups.trim() !== \"\") {\n    recipientData[\"groups\"] = groups;\n  }\n  if (schedules && schedules.trim() !== \"\") {\n    recipientData[\"schedules\"] = schedules;\n  }\n\n  K('field[Recipients JSON]').value( JSON.stringify(recipientData) );\n}\n\nintegration.populateRecipientData = function() {\n  if( K('field[Notification Method]').value() === \"broadcastInfo\" || K('field[Notification Method]').value() === \"bulletinBoardInfo\" ) {\n    var recipientData = JSON.parse( K('field[Recipients JSON]').value() || \"{}\" );\n    K('field[Individuals]').value( recipientData['individuals'] );\n    K('field[Groups]').value( recipientData['groups'] );\n    K('field[Schedules]').value( recipientData['schedules'] );\n  }\n  // Set the escalation level to 1, to display the first set of recipients (if any)\n  if ( K('field[Notification Method]').value() === \"firstResponseInfo\" || K('field[Notification Method]').value() === \"calloutInfo\" ) {\n    K('field[Escalation Level]').value('Escalation Level 1');\n    //Populate the Escalations currently identified\n    integration.populateConfiguredEscalationLevels();\n  }\n}\n\nintegration.populateConfiguredEscalationLevels = function() {\n  var recipients = JSON.parse( K('field[Recipients JSON]').value() || \"{}\" ),\n      configuredLevels = [];\n  // Clear current listing\n  $('#escalation-levels').empty();\n  \n  // Loop over configured listing and populate\n  $.each( recipients, function( k, v ) {\n    configuredLevels.push( '<span class=\"configured-level\">' + k + '</span>' );\n  })\n  \n  if (configuredLevels.length > 0) {\n    $('#escalation-levels').html(configuredLevels.join(\", \"));\n  } else {\n    $('#escalation-levels').html('<span class=\"configured-level\">None</span>');\n  }\n}\n\nintegration.getRecurrenceStatus = function() {\n  if ( K('field[Recurrence Submission Id]').value() !== null ) {\n    K('bridgedResource[Robot by Id]').load({\n      success: function(bridgedData) {\n        K('field[Recurrence Status]').value(bridgedData['Status']);\n      }\n    })\n  }\n}\n\nintegration.createJsonInputs = function(jsonField, container, allowDelete) {\n  $('#'+container).on('click','.delete', function() {\n    var json_el = $(this).closest('.json-container'),\n        json_el_key = json_el.find('.json-key').val();\n    result = confirm(\"Are you sure you want to remove the \" + json_el_key + \" parameter?\");\n    if ( result === true ) {\n        json_el.remove();\n    }\n  });\n  \n  $.each( JSON.parse( K('field['+jsonField+']').value() || \"{}\" ), function( k, v ) {\n    var container_el = $('<div class=\"json-container\"></div>'),\n        el = $('<div class=\"form-group\"></div>'),\n        el_input_group = $('<div class=\"input-group\">');\n    //allow delete means users can edit the key value as well\n    if ( allowDelete === true) {\n      el_input_group.append('<input type=\"text\" class=\"form-control json-key\" value=\"' + k + '\">');\n    } else {\n\t    el_input_group.append('<input type=\"text\" readonly=\"true\" class=\"form-control json-key\" value=\"' + k + '\">');\n    }\n    el_input_group.append('<input type=\"text\" class=\"form-control json-value\" value=\"' + v + '\">');\n    if ( allowDelete === true) {\n      el_input_group.append('<div class=\"input-group-append\"><span class=\"input-group-text delete bg-danger\"></i><i class=\"fa fa-close fa-fw\"></i></span></div>');\n    }\n    container_el.append( el.append( el_input_group ) );\n    $('#'+container).append( container_el );\n  });\n}\n\nintegration.addJsonInput = function(container, allowDelete) {\n  var container_el = $('<div class=\"json-container\"></div>'),\n      el = $('<div class=\"form-group\"></div>'),\n      el_input_group = $('<div class=\"input-group\">');\n  el_input_group.append('<input type=\"text\" class=\"form-control json-key\" placeholder=\"key\">');\n  el_input_group.append('<input type=\"text\" class=\"form-control json-value\" placeholder=\"value\">');\n  if ( allowDelete === true) {\n    el_input_group.append('<div class=\"input-group-append\"><span class=\"input-group-text delete bg-danger\"><i class=\"fa fa-close fa-fw\"></i></span></div>');\n  }\n  container_el.append( el.append( el_input_group ) );\n  $('#'+container).append( container_el );\n}\n\nintegration.storeJsonInputs = function(jsonField, container) {\n  //$.each( JSON.parse( K('field['+jsonField+']').value() || \"{}\" ), function( k, v ) {\n  var obj = {};\n  $('#' + container + ' div.json-container').each(function(){\n    var key = $(this).find('input.json-key').val();\n        value = $(this).find('input.json-value').val();\n    obj[key] = value;\n  });\n  K('field['+jsonField+']').value( JSON.stringify( obj ) );\n}\n\n\nif ( K('submission').id() !== null ) {\n  integration.getRecurrenceStatus();\n  integration.getPlaceholders();\n  //integration.enableFields();\n  integration.populateRecipientData();\n  integration.createJsonInputs(\"Initiation Custom Action Parameters\",\"initiation-custom-action-params\", true);\n  integration.createJsonInputs(\"Result Custom Action Parameters\",\"result-custom-action-params\", true);\n  integration.createJsonInputs(\"Interim Custom Action Parameters\",\"interim-custom-action-params\", true);\n};\n\n// Generate standard action params display\nintegration.createJsonInputs(\"Initiation Standard Action Parameters\",\"initiation-standard-action-params\");\nintegration.createJsonInputs(\"Result Standard Action Parameters\",\"result-standard-action-params\");\nintegration.createJsonInputs(\"Interim Standard Action Parameters\",\"interim-standard-action-params\");"
        },
        {
          "name": "Save Placeholders",
          "type": "Submit",
          "action": "Custom",
          "code": "bundle.ext.forms[K('form').slug()].savePlaceholders();"
        },
        {
          "name": "Save Recipients JSON if Non Escalation Notification Method",
          "type": "Submit",
          "action": "Custom",
          "code": "bundle.ext.forms[K('form').slug()].consolidateRecipientData();\n\n//Clear fields\nK('field[Individuals]').value( null );\nK('field[Groups]').value( null );\nK('field[Schedules]').value( null );",
          "runIf": "values('Notification Method') === \"broadcastInfo\" || values('Notification Method') === \"bulletinBoardInfo\""
        },
        {
          "name": "Save Parameter Inputs",
          "type": "Submit",
          "action": "Custom",
          "code": "bundle.ext.forms[K('form').slug()].storeJsonInputs(\"Initiation Standard Action Parameters\",\"initiation-standard-action-params\");\nbundle.ext.forms[K('form').slug()].storeJsonInputs(\"Initiation Custom Action Parameters\",\"initiation-custom-action-params\", true);\nbundle.ext.forms[K('form').slug()].storeJsonInputs(\"Result Standard Action Parameters\",\"result-standard-action-params\");\nbundle.ext.forms[K('form').slug()].storeJsonInputs(\"Result Custom Action Parameters\",\"result-custom-action-params\", true);\nbundle.ext.forms[K('form').slug()].storeJsonInputs(\"Interim Standard Action Parameters\",\"interim-standard-action-params\");\nbundle.ext.forms[K('form').slug()].storeJsonInputs(\"Interim Custom Action Parameters\",\"interim-custom-action-params\", true);"
        },
        {
          "name": "Get Next Execution",
          "type": "Load",
          "action": "Custom",
          "code": "$('#next-poll').html( \"Next Poll Activity: \" + moment( resource[ 'Next Execution' ] ).format( \"L LTS\" ) + \" (\" + moment( resource[ 'Next Execution' ] ).fromNow() + \")\" );",
          "runIf": "values('Polling') === \"Yes\"",
          "bridgedResourceName": "Next Robot Execution"
        },
        {
          "name": "Get Last Execution",
          "type": "Load",
          "action": "Custom",
          "code": "var lastPollEnd = \"<div id='last-poll-date'>Last Poll Activity: \" + moment( resource[ 'End' ] ).format( 'L LTS' ) + \" (\" + moment( resource[ 'End' ] ).fromNow() + \")</div>\";\nvar lastPollOutputObj = JSON.parse( resource[ 'Output' ] || {\"message\":\"No output\"} );\nvar lastPollOutput = $(\"<div id='last-poll-output' class=''></div>\");\n$.each( lastPollOutputObj, function( k, v ) {\n  var vOutput = moment(v).isValid() ? moment(v).format('L LTS') : v\n  lastPollOutput.append(\"<div class='row'><div class='last-poll-output-key col-md-2'>\" + k + \": </div><div class='last-poll-output-value col-md-10'>\" + vOutput + \"</div></div>\")\n})\n\n$('#last-poll').html(lastPollEnd).append(lastPollOutput);",
          "runIf": "values('Polling') === \"Yes\"",
          "bridgedResourceName": "Last Robot Execution"
        }
      ],
      "name": "Page 1",
      "renderType": "submittable",
      "type": "page"
    }
  ],
  "securityPolicies": [

  ],
  "slug": "cherwell",
  "status": "Active",
  "submissionLabelExpression": "${values('Name')}"
}